{"version":3,"file":"mat-table-exporter.js.map","sources":["ng://mat-table-exporter/lib/mat-table-exporter.directive.ts","ng://mat-table-exporter/lib/mat-table-exporter.module.ts"],"sourcesContent":["import { AfterViewInit, Directive, Renderer2 } from '@angular/core';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { CdkTableExporter, JsonExporterService } from 'cdk-table-exporter';\nimport { Observable } from 'rxjs';\n\n@Directive({\n  selector: '[ngxMatTableExporter]'\n})\nexport class MatTableExporterDirective extends CdkTableExporter implements AfterViewInit {\n\n/**\n * Overriding ngAfterViewInit of TableExporter\n */\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    if (this.getPaginator()) {\n      this.exportStarted.subscribe(_ => {\n        this.enablePaginator(false);\n      });\n      this.exportCompleted.subscribe(_ => {\n        this.enablePaginator(true);\n      });\n    }\n  }\n\n  constructor(protected renderer: Renderer2, protected jsonExporter: JsonExporterService) {\n    super(renderer, jsonExporter);\n  }\n\n\n/**\n * MatTable implementation of getPageCount\n * @override\n */\n  public getPageCount(): number {\n    return this.getPaginator().getNumberOfPages();\n  }\n\n/**\n * MatTable implementation of getCurrentPageIndex\n * @override\n */\n  public getCurrentPageIndex(): number {\n    return this.getPaginator().pageIndex;\n  }\n\n/**\n * MatTable implementation of goToPage\n * @override\n */\n  public goToPage(index: number): void {\n    this.getPaginator().pageIndex = index;\n    this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n  }\n\n/**\n * MatTable implementation of getPageChangeObservable\n * @override\n */\n  public getPageChangeObservable(): Observable<any> {\n    return this.getPaginator().page;\n  }\n\n\n  private getPaginator(): MatPaginator {\n    return (this.cdkTable.dataSource as MatTableDataSource<any>).paginator;\n  }\n\n  private enablePaginator(value: boolean) {\n      this.getPaginator().disabled = !value;\n      this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n  }\n\n}\n","import { MatTableModule } from '@angular/material';\nimport { NgModule } from '@angular/core';\nimport { MatTableExporterDirective } from './mat-table-exporter.directive';\n\n@NgModule({\n  declarations: [MatTableExporterDirective],\n  imports: [\n    MatTableModule\n  ],\n  exports: [MatTableExporterDirective]\n})\nexport class MatTableExporterModule { }\n"],"names":[],"mappings":";;;;;;;;;AAAA,MAQa,yBAA0B,SAAQ,gBAAgB;;;;;IAiB7D,YAAsB,QAAmB,EAAY,YAAiC;QACpF,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QADV,aAAQ,GAAR,QAAQ,CAAW;QAAY,iBAAY,GAAZ,YAAY,CAAqB;KAErF;;;;;IAdD,eAAe;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACvB,IAAI,CAAC,aAAa,CAAC,SAAS;;;;YAAC,CAAC;gBAC5B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC7B,EAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,SAAS;;;;YAAC,CAAC;gBAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;aAC5B,EAAC,CAAC;SACJ;KACF;;;;;;IAWM,YAAY;QACjB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,CAAC;KAC/C;;;;;;IAMM,mBAAmB;QACxB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;KACtC;;;;;;;IAMM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;KACnE;;;;;;IAMM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;KACjC;;;;;IAGO,YAAY;QAClB,OAAO,oBAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,IAA6B,SAAS,CAAC;KACxE;;;;;;IAEO,eAAe,CAAC,KAAc;QAClC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;KACrE;;;YAlEF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;aAClC;;;;YAPkC,SAAS;YAEjB,mBAAmB;;;;;;;ACF9C,MAWa,sBAAsB;;;YAPlC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;gBACzC,OAAO,EAAE;oBACP,cAAc;iBACf;gBACD,OAAO,EAAE,CAAC,yBAAyB,CAAC;aACrC;;;;;;;;;;;;;;;"}
