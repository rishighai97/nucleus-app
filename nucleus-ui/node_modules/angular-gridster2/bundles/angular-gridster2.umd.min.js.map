{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-gridster2/lib/gridsterScroll.service.ts","ng://angular-gridster2/lib/gridsterConfig.interface.ts","ng://angular-gridster2/lib/gridsterConfig.constant.ts","ng://angular-gridster2/lib/gridsterUtils.service.ts","ng://angular-gridster2/lib/gridster.interface.ts","ng://angular-gridster2/lib/gridsterEmptyCell.service.ts","ng://angular-gridster2/lib/gridsterCompact.service.ts","ng://angular-gridster2/lib/gridsterRenderer.service.ts","ng://angular-gridster2/lib/gridster.component.ts","ng://angular-gridster2/lib/gridsterItemComponent.interface.ts","ng://angular-gridster2/lib/gridsterSwap.service.ts","ng://angular-gridster2/lib/gridsterPush.service.ts","ng://angular-gridster2/lib/gridsterDraggable.service.ts","ng://angular-gridster2/lib/gridsterPushResize.service.ts","ng://angular-gridster2/lib/gridsterResizable.service.ts","ng://angular-gridster2/lib/gridsterItem.component.ts","ng://angular-gridster2/lib/gridsterPreview.component.ts","ng://angular-gridster2/lib/gridster.module.ts"],"names":["scrollSensitivity","scrollSpeed","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","Fit","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","Always","OnDragAndResize","None","CompactUp","CompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","CompactUpAndRight","CompactRightAndUp","GridsterConfigService","gridType","GridType","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","compactType","CompactType","mobileBreakpoint","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","e","w","se","ne","sw","nw","swap","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","DisplayGrid","disableWindowResize","disableWarnings","scrollToNewItems","disableScrollHorizontal","disableScrollVertical","disableAutoPositionOnConflict","GridsterUtils","merge","obj1","obj2","properties","debounce","func","wait","timeout","context","args","clearTimeout","setTimeout","checkTouchEvent","clientX","touches","clientY","changedTouches","checkContentClassForEvent","gridster","$options","checkContentClass","target","currentTarget","checkContentClassForEmptyCellClickEvent","current","contentClass","hasAttribute","getAttribute","split","indexOf","parentNode","compareItems","a","b","y","x","Injectable","GridsterEmptyCell","destroy","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","item","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","oldItem","rect","getBoundingClientRect","scrollLeft","left","scrollTop","top","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","checkCollision","GridsterComponentInterface","GridsterCompact","checkCompact","checkCompactUp","checkCompactLeft","checkCompactRight","checkCompactItem","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","$item","compactEnabled","itemChanged","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","d","transform","getLeftMargin","getTopMargin","GridsterComponent","nativeElement","JSON","parse","stringify","calculateLayoutDebounce","calculateLayout","curHeight","dragInProgress","emptyCell","compact","gridRenderer","checkCollisionTwoItems","item2","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","clientWidth","clientHeight","offsetWidth","offsetHeight","checkIfToResize","windowResize","widgetsIndex","ngOnDestroy","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","updateGrid","setSize","drag","toggle","addItem","itemComponent","autoPositionItem","console","warn","push","removeItem","splice","collision","checkGridCollision","c","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","Component","selector","template","encapsulation","ViewEncapsulation","ElementRef","Renderer2","ChangeDetectorRef","NgZone","Input","GridsterSwap","gridsterItem","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","checkItemChanges","pushedBy","gridsterItemCollision","canBeDragged","gridsterItemCollide","copyCollisionX","copyCollisionY","copyX","copyY","GridsterItemComponentInterface","intervalDuration","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterPush","pushedItems","pushedItemsTemp","pushedItemsTempPath","pushedItemsPath","tryPattern","fromEast","tryWest","trySouth","tryNorth","tryEast","fromWest","fromNorth","fromSouth","direction","disable","pushedItemsOrder","pushed","restoreTempItems","removeFromTempPushed","restoreItems","pushedItem","setPushedItems","checkPushBack","change","checkPushedItem","itemCollision","makePush","find","lastIndexOf","j","pop","removeFromPushedItem","addToTempPushed","addToPushed","tempPosition","removeFromPushed","lastPosition","path","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","diffLeft","diffTop","calculateItemPositionFromMousePosition","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","itemBackup","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleW","handleS","handleE","handleNW","handleNE","handleSW","handleSE","makeResize","cancelResize","newPosition","setItemTop","setItemHeight","setItemLeft","setItemWidth","ceil","resizeEnabled","GridsterItemComponent","dragEnabled","updateItemSize","init","scrollIntoView","newValue","oldValue","decorators","type","Host","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap"],"mappings":"qVA6BO,IC1BHA,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EDiBOC,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,eEpB9BQ,IAAM,MACNC,eAAiB,iBACjBC,iBAAmB,mBACnBC,MAAQ,QACRC,cAAgB,gBAChBC,gBAAkB,sBAIlBC,OAAS,SACTC,gBAAkB,gBAClBC,KAAO,WAIPA,KAAO,OACPC,UAAY,YACZC,YAAc,cACdC,iBAAmB,iBACnBC,iBAAmB,iBACnBC,aAAe,eACfC,kBAAoB,kBACpBC,kBAAoB,mBCrCTC,EAAwC,CACnDC,SAAUC,EAASlB,IAMnBmB,cAAe,IACfC,eAAgB,IAChBC,yBAAyB,EACzBC,wBAAwB,EACxBC,aAAa,EACbC,YAAaC,EAAYjB,KACzBkB,iBAAkB,IAClBC,QAAS,EACTC,QAAS,IACTC,QAAS,EACTC,QAAS,IACTC,gBAAiB,EACjBC,gBAAiB,EACjBC,YAAa,GACbC,YAAa,GACbC,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,YAAa,KACbC,OAAQ,GACRC,aAAa,EACbC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,gBAAiB,KACjBC,yBAAyB,EACzBrE,kBAAmB,GACnBC,YAAa,GACbqE,aAAcC,UACdC,gBAAiBD,UACjBE,wBAAyBF,UACzBG,mBAAoBH,UAEpBI,mBAAoBJ,UAEpBK,iBAAkBL,UAElBM,oBAAqBN,UAErBO,qBAAsBP,UAEtBQ,sBAAsB,EACtBC,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAwBZ,UACxBa,6BAA8Bb,UAC9Bc,sBAAuBd,UACvBe,sBAAuBf,UACvBgB,qBAAsB,GACtBC,qBAAsB,GAEtBC,mBAAmB,EACnBC,UAAW,CACTC,WAAY,EACZC,SAAS,EACTC,mBAAoB,wBACpBC,eAAe,EACfC,gBAAiB,eACjBC,KAAMzB,UACN0B,MAAO1B,UAEP2B,eAAe,EACfC,sBAAuB5B,WAGzB6B,UAAW,CACTT,WAAY,EACZC,SAAS,EACTS,QAAS,CACPxF,GAAG,EACHyF,GAAG,EACHvF,GAAG,EACHwF,GAAG,EACHC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,GAENX,KAAMzB,UACN0B,MAAO1B,WAGTqC,MAAM,EACNC,WAAW,EACXC,mBAAmB,EACnBC,qBAAqB,EACrBC,eAAgB,CAACC,OAAO,EAAMC,MAAM,EAAMC,OAAO,EAAMC,MAAM,GAC7DC,iBAAiB,EACjBC,YAAaC,EAAYxF,gBACzByF,qBAAqB,EACrBC,iBAAiB,EACjBC,kBAAkB,EAClBC,yBAAyB,EACzBC,uBAAuB,EACvBC,+BAA+B,GCxGjCC,EAAA,WAIA,SAAAA,KAkFA,OA/ESA,EAAAC,MAAP,SAAaC,EAAWC,EAAWC,GACjC,IAAK,IAAMhH,KAAK+G,OACE,IAAZA,EAAK/G,IAAiBgH,EAAW9G,eAAeF,KAC3B,iBAAZ+G,EAAK/G,GACd8G,EAAK9G,GAAK4G,EAAcC,MAAMC,EAAK9G,GAAI+G,EAAK/G,GAAIgH,EAAWhH,IAE3D8G,EAAK9G,GAAK+G,EAAK/G,IAKrB,OAAO8G,GAGFF,EAAAK,SAAP,SAAgBC,EAAgBC,OAC1BC,EACJ,OAAA,eACQC,EAAUhH,KAAMiH,EAAOxH,UAK7ByH,aAAaH,GACbA,EAAUI,WALC,WACTJ,EAAU,KACVF,EAAK9G,MAAMiH,EAASC,IAGMH,KAIzBP,EAAAa,gBAAP,SAAuBrC,GACjBA,EAAEsC,UAAYrE,WAAa+B,EAAEuC,UAC3BvC,EAAEuC,SAAWvC,EAAEuC,QAAQ5H,QACzBqF,EAAEsC,QAAUtC,EAAEuC,QAAQ,GAAGD,QACzBtC,EAAEwC,QAAUxC,EAAEuC,QAAQ,GAAGC,SAChBxC,EAAEyC,gBAAkBzC,EAAEyC,eAAe9H,SAC9CqF,EAAEsC,QAAUtC,EAAEyC,eAAe,GAAGH,QAChCtC,EAAEwC,QAAUxC,EAAEyC,eAAe,GAAGD,WAK/BhB,EAAAkB,0BAAP,SAAiCC,EAAsC3C,GACrE,GAAI2C,EAASC,SAASxD,UAAUI,eAC9B,IAAKgC,EAAcqB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAeJ,EAASC,SAASxD,UAAUK,iBAC1F,OAAO,OAGT,GAAI+B,EAAcqB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAeJ,EAASC,SAASxD,UAAUG,oBACzF,OAAO,EAGX,OAAO,GAGFiC,EAAAwB,wCAAP,SAA+CL,EAAsC3C,GACnF,OAAOwB,EAAcqB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAeJ,EAASC,SAASxD,UAAUG,qBACzFiC,EAAcqB,kBAAkB7C,EAAE8C,OAAQ9C,EAAE+C,cAAeJ,EAASC,SAASxD,UAAUK,kBAGvF+B,EAAAqB,kBAAP,SAAyBC,EAAaG,EAAcC,GAClD,SAAKJ,GAAUA,IAAWG,QAGtBH,EAAOK,aAAa,UAAYL,EAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQJ,IAAiB,IAG5F1B,EAAcqB,kBAAkBC,EAAOS,WAAYN,EAASC,KAIhE1B,EAAAgC,aAAP,SAAoBC,EAA6BC,GAC/C,OAAID,EAAEE,EAAID,EAAEC,GACF,EACCF,EAAEE,EAAID,EAAEC,EACV,EACEF,EAAEG,EAAIF,EAAEE,GACT,EAED,uBA/EZC,EAAAA,aAkFDrC,EAtFA,gBC8CA,OArCA,gBCTAsC,EAAA,WAsBE,SAAAA,EAAoBnB,GAAA1H,KAAA0H,SAAAA,EA4MtB,OAzMEmB,EAAAjJ,UAAAkJ,QAAA,kBACS9I,KAAK+I,mBACL/I,KAAK0H,SAASsB,WACjBhJ,KAAK0H,SAASuB,cAChBjJ,KAAK0H,SAASuB,sBAETjJ,KAAK0H,SACR1H,KAAKkJ,gBACPlJ,KAAKkJ,gBACLlJ,KAAKkJ,cAAgB,OAIzBL,EAAAjJ,UAAAuJ,cAAA,WAAA,IAAAC,EAAApJ,KACMA,KAAK0H,SAASC,SAASnE,uBAAyBxD,KAAKqJ,gBAAkBrJ,KAAK0H,SAAS4B,QAAQ1F,wBAC/F5D,KAAKqJ,eAAiBrJ,KAAK0H,SAAS6B,SAASC,OAAOxJ,KAAK0H,SAAS+B,GAAI,QAASzJ,KAAK0J,iBAAiBC,KAAK3J,OAC1GA,KAAK4J,oBAAsB5J,KAAK0H,SAAS6B,SAASC,OAAOxJ,KAAK0H,SAAS+B,GAAI,WAAYzJ,KAAK0J,iBAAiBC,KAAK3J,SACxGA,KAAK0H,SAASC,SAASnE,sBAAwBxD,KAAKqJ,gBAAkBrJ,KAAK4J,sBACrF5J,KAAKqJ,iBACLrJ,KAAK4J,sBACL5J,KAAKqJ,eAAiB,KACtBrJ,KAAK4J,oBAAsB,MAEzB5J,KAAK0H,SAASC,SAASlE,6BAA+BzD,KAAK6J,sBAC7D7J,KAAK0H,SAAS4B,QAAQzF,6BACtB7D,KAAK6J,qBAAuB7J,KAAK0H,SAAS6B,SAASC,OAAOxJ,KAAK0H,SAAS+B,GAAI,cAAezJ,KAAK8J,uBAAuBH,KAAK3J,QAClHA,KAAK0H,SAASC,SAASlE,4BAA8BzD,KAAK6J,uBACpE7J,KAAK6J,uBACL7J,KAAK6J,qBAAuB,MAE1B7J,KAAK0H,SAASC,SAASjE,sBAAwB1D,KAAK+J,eAAiB/J,KAAK0H,SAAS4B,QAAQxF,uBAC7F9D,KAAK+J,cAAgB/J,KAAK0H,SAAS6B,SAASC,OAAOxJ,KAAK0H,SAAS+B,GAAI,OAAQzJ,KAAKgK,kBAAkBL,KAAK3J,OACzGA,KAAK0H,SAASuC,KAAKC,kBAAiB,WAClCd,EAAKe,cAAgBf,EAAK1B,SAAS6B,SAASC,OAAOJ,EAAK1B,SAAS+B,GAAI,WAAYL,EAAKgB,kBAAkBT,KAAKP,MAE/GpJ,KAAKkJ,cAAgBlJ,KAAK0H,SAAS6B,SAASC,OAAO,WAAY,UAAS,WACtEJ,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,mBAENjJ,KAAK0H,SAASC,SAASjE,qBAAuB1D,KAAK+J,eAAiB/J,KAAKmK,eAAiBnK,KAAKkJ,gBACzGlJ,KAAK+J,gBACL/J,KAAKmK,gBACLnK,KAAKkJ,gBACLlJ,KAAKmK,cAAgB,KACrBnK,KAAK+J,cAAgB,KACrB/J,KAAKkJ,cAAgB,MAEnBlJ,KAAK0H,SAASC,SAAShE,sBAAwB3D,KAAKqK,eAAiBrK,KAAK0H,SAAS4B,QAAQvF,uBAC7F/D,KAAKqK,cAAgBrK,KAAK0H,SAAS6B,SAASC,OAAOxJ,KAAK0H,SAAS+B,GAAI,YAAazJ,KAAKsK,mBAAmBX,KAAK3J,OAC/GA,KAAKuK,mBAAqBvK,KAAK0H,SAAS6B,SAASC,OAAOxJ,KAAK0H,SAAS+B,GAAI,aAAczJ,KAAKsK,mBAAmBX,KAAK3J,SAC3GA,KAAK0H,SAASC,SAAShE,qBAAuB3D,KAAKqK,eAAiBrK,KAAKuK,qBACnFvK,KAAKqK,gBACLrK,KAAKuK,qBACLvK,KAAKqK,cAAgB,KACrBrK,KAAKuK,mBAAqB,OAI9B1B,EAAAjJ,UAAA8J,iBAAA,SAAiB3E,GACf,IAAI/E,KAAK0H,SAASsB,aAAczC,EAAcwB,wCAAwC/H,KAAK0H,SAAU3C,GAArG,KAGMyF,EAAOxK,KAAKyK,sBAAsB1F,GACnCyF,IAGDxK,KAAK0H,SAAS4B,QAAQ1F,wBACxB5D,KAAK0H,SAAS4B,QAAQ1F,uBAAuBmB,EAAGyF,GAElDxK,KAAK0H,SAASgD,MAAMC,kBAGtB9B,EAAAjJ,UAAAkK,uBAAA,SAAuB/E,GACrB,IAAI/E,KAAK0H,SAASsB,aAAczC,EAAcwB,wCAAwC/H,KAAK0H,SAAU3C,GAArG,CAGAA,EAAE6F,iBACF7F,EAAE8F,sBACIL,EAAOxK,KAAKyK,sBAAsB1F,GACnCyF,IAGDxK,KAAK0H,SAAS4B,QAAQzF,8BACxB7D,KAAK0H,SAAS4B,QAAQzF,6BAA6BkB,EAAGyF,GAExDxK,KAAK0H,SAASgD,MAAMC,kBAGtB9B,EAAAjJ,UAAAoK,kBAAA,SAAkBjF,OACVyF,EAAOxK,KAAKyK,sBAAsB1F,GACnCyF,IAGDxK,KAAK0H,SAAS4B,QAAQxF,uBACxB9D,KAAK0H,SAAS4B,QAAQxF,sBAAsBiB,EAAGyF,GAEjDxK,KAAK0H,SAASgD,MAAMC,iBAGtB9B,EAAAjJ,UAAAwK,kBAAA,SAAkBrF,GAChBA,EAAE6F,iBACF7F,EAAE8F,sBACIL,EAAOxK,KAAKyK,sBAAsB1F,GACpCyF,GACFzF,EAAE+F,aAAaC,WAAa,OAC5B/K,KAAK0H,SAASsB,WAAawB,IAE3BzF,EAAE+F,aAAaC,WAAa,OAC5B/K,KAAK0H,SAASsB,WAAa,MAE7BhJ,KAAK0H,SAASuB,gBAGhBJ,EAAAjJ,UAAA0K,mBAAA,SAAmBvF,GAAnB,IAAAqE,EAAApJ,KACE,IAAIuG,EAAcwB,wCAAwC/H,KAAK0H,SAAU3C,GAAzE,CAGAA,EAAE6F,iBACF7F,EAAE8F,sBACIL,EAAOxK,KAAKyK,sBAAsB1F,GAEnCyF,GADuB,IACfzF,EAAEiG,UAGfhL,KAAK+I,YAAcyB,EACnBxK,KAAK0H,SAASsB,WAAawB,EAC3BxK,KAAK0H,SAASuB,eACdjJ,KAAK0H,SAASuC,KAAKC,kBAAiB,WAClCd,EAAK6B,eAAiB7B,EAAK1B,SAAS6B,SAASC,OAAO,SAAU,YAAaJ,EAAK8B,mBAAmBvB,KAAKP,IACxGA,EAAK+B,oBAAsB/B,EAAK1B,SAAS6B,SAASC,OAAO,SAAU,YAAaJ,EAAK8B,mBAAmBvB,KAAKP,MAE/GpJ,KAAKoL,YAAcpL,KAAK0H,SAAS6B,SAASC,OAAO,SAAU,UAAWxJ,KAAKqL,iBAAiB1B,KAAK3J,OACjGA,KAAKsL,iBAAmBtL,KAAK0H,SAAS6B,SAASC,OAAO,SAAU,WAAYxJ,KAAKqL,iBAAiB1B,KAAK3J,UAGzG6I,EAAAjJ,UAAAsL,mBAAA,SAAmBnG,GACjBA,EAAE6F,iBACF7F,EAAE8F,sBACIL,EAAOxK,KAAKyK,sBAAsB1F,EAAG/E,KAAK+I,aAC3CyB,IAILxK,KAAK0H,SAASsB,WAAawB,EAC3BxK,KAAK0H,SAASuB,iBAGhBJ,EAAAjJ,UAAAyL,iBAAA,SAAiBtG,GAAjB,IAAAqE,EAAApJ,KACEA,KAAKiL,iBACLjL,KAAKmL,sBACLnL,KAAKoL,cACLpL,KAAKsL,uBACCd,EAAOxK,KAAKyK,sBAAsB1F,EAAG/E,KAAK+I,aAC5CyB,IACFxK,KAAK0H,SAASsB,WAAawB,GAEzBxK,KAAK0H,SAAS4B,QAAQvF,uBAAyB/D,KAAK0H,SAASsB,YAC/DhJ,KAAK0H,SAAS4B,QAAQvF,sBAAsBgB,EAAG/E,KAAK0H,SAASsB,YAE/D7B,WAAU,WACRiC,EAAKL,YAAc,KACfK,EAAK1B,WACP0B,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,kBAGlBjJ,KAAK0H,SAASgD,MAAMC,gBAGtB9B,EAAAjJ,UAAA6K,sBAAA,SAAsB1F,EAAQwG,GAC5BxG,EAAE6F,iBACF7F,EAAE8F,kBACFtE,EAAca,gBAAgBrC,OACxByG,EAAOxL,KAAK0H,SAAS+B,GAAGgC,wBACxB9C,EAAI5D,EAAEsC,QAAUrH,KAAK0H,SAAS+B,GAAGiC,WAAaF,EAAKG,KAAO3L,KAAK0H,SAASC,SAASnF,OACjFkG,EAAI3D,EAAEwC,QAAUvH,KAAK0H,SAAS+B,GAAGmC,UAAYJ,EAAKK,IAAM7L,KAAK0H,SAASC,SAASnF,OAC/EgI,EAAqB,CACzB7B,EAAG3I,KAAK0H,SAASoE,kBAAkBnD,EAAGoD,KAAKC,OAAO,GAClDtD,EAAG1I,KAAK0H,SAASuE,kBAAkBvD,EAAGqD,KAAKC,OAAO,GAClDE,KAAMlM,KAAK0H,SAASC,SAAS3F,gBAC7BmK,KAAMnM,KAAK0H,SAASC,SAAS1F,iBAgB/B,GAdIsJ,IACFf,EAAK0B,KAAOH,KAAKK,IAAIL,KAAKM,IAAId,EAAQ5C,EAAI6B,EAAK7B,GAAK,EAAG3I,KAAK0H,SAASC,SAAS3D,sBAC9EwG,EAAK2B,KAAOJ,KAAKK,IAAIL,KAAKM,IAAId,EAAQ7C,EAAI8B,EAAK9B,GAAK,EAAG1I,KAAK0H,SAASC,SAAS1D,sBAC1EsH,EAAQ5C,EAAI6B,EAAK7B,EACnB6B,EAAK7B,EAAI4C,EAAQ5C,EACR4C,EAAQ5C,EAAI6B,EAAK7B,EAAI3I,KAAK0H,SAASC,SAAS3D,qBAAuB,IAC5EwG,EAAK7B,EAAI3I,KAAK0H,SAASsB,WAAahJ,KAAK0H,SAASsB,WAAWL,EAAI,GAE/D4C,EAAQ7C,EAAI8B,EAAK9B,EACnB8B,EAAK9B,EAAI6C,EAAQ7C,EACR6C,EAAQ7C,EAAI8B,EAAK9B,EAAI1I,KAAK0H,SAASC,SAAS1D,qBAAuB,IAC5EuG,EAAK9B,EAAI1I,KAAK0H,SAASsB,WAAahJ,KAAK0H,SAASsB,WAAWN,EAAI,KAGjE1I,KAAK0H,SAAS4E,eAAe9B,GAGjC,OAAOA,uBA1NV5B,EAAAA,sDAFO2D,KA8NR1D,EAlOA,GCAA2D,EAAA,WAUE,SAAAA,EAAoB9E,GAAA1H,KAAA0H,SAAAA,EA8ItB,OA3IE8E,EAAA5M,UAAAkJ,QAAA,kBACS9I,KAAK0H,UAGd8E,EAAA5M,UAAA6M,aAAA,WACMzM,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYjB,OACjDT,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYhB,UACrDV,KAAK0M,iBACI1M,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYf,YAC5DX,KAAK2M,mBACI3M,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYd,kBAC5DZ,KAAK0M,iBACL1M,KAAK2M,oBACI3M,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYb,kBAC5Db,KAAK2M,mBACL3M,KAAK0M,kBACI1M,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYZ,aAC5Dd,KAAK4M,oBACI5M,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYX,mBAC5Df,KAAK0M,iBACL1M,KAAK4M,qBACI5M,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYV,oBAC5DhB,KAAK4M,oBACL5M,KAAK0M,oBAKXF,EAAA5M,UAAAiN,iBAAA,SAAiBrC,GACXxK,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYjB,OACjDT,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYhB,UACrDV,KAAK8M,oBAAoBtC,GAChBxK,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYf,YAC5DX,KAAK+M,sBAAsBvC,GAClBxK,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYd,kBAC5DZ,KAAK8M,oBAAoBtC,GACzBxK,KAAK+M,sBAAsBvC,IAClBxK,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYb,kBAC5Db,KAAK+M,sBAAsBvC,GAC3BxK,KAAK8M,oBAAoBtC,IAChBxK,KAAK0H,SAASC,SAASlG,cAAgBC,EAAYX,oBAC5Df,KAAK8M,oBAAoBtC,GACzBxK,KAAKgN,uBAAuBxC,MAKlCgC,EAAA5M,UAAA8M,eAAA,WAGE,QAF2BO,EAAvBC,GAAgB,EACdC,EAAInN,KAAK0H,SAAS0F,KAAK1N,OACpBH,EAAI,EAAGA,EAAI4N,EAAG5N,KAEe,KADpC0N,EAASjN,KAAK0H,SAAS0F,KAAK7N,IACjB8N,MAAMC,gBAGTtN,KAAK8M,oBAAoBG,EAAOI,SAEtCH,GAAgB,EAChBD,EAAOzC,KAAK9B,EAAIuE,EAAOI,MAAM3E,EAC7BuE,EAAOM,eAGPL,GACFlN,KAAKyM,gBAITD,EAAA5M,UAAAkN,oBAAA,SAAoBtC,GAElB,OADAA,EAAK9B,GAAK,EACN1I,KAAK0H,SAAS4E,eAAe9B,IAC/BA,EAAK9B,GAAK,GACH,IAEP1I,KAAK8M,oBAAoBtC,IAClB,IAIXgC,EAAA5M,UAAA+M,iBAAA,WAGE,QAF2BM,EAAvBC,GAAgB,EACdC,EAAInN,KAAK0H,SAAS0F,KAAK1N,OACpBH,EAAI,EAAGA,EAAI4N,EAAG5N,KAEe,KADpC0N,EAASjN,KAAK0H,SAAS0F,KAAK7N,IACjB8N,MAAMC,gBAGTtN,KAAK+M,sBAAsBE,EAAOI,SAExCH,GAAgB,EAChBD,EAAOzC,KAAK7B,EAAIsE,EAAOI,MAAM1E,EAC7BsE,EAAOM,eAGPL,GACFlN,KAAKyM,gBAITD,EAAA5M,UAAAgN,kBAAA,WAGE,QAF2BK,EAAvBC,GAAgB,EACdC,EAAInN,KAAK0H,SAAS0F,KAAK1N,OACpBH,EAAI,EAAGA,EAAI4N,EAAG5N,KAEe,KADpC0N,EAASjN,KAAK0H,SAAS0F,KAAK7N,IACjB8N,MAAMC,gBAGTtN,KAAKgN,uBAAuBC,EAAOI,SAEzCH,GAAgB,EAChBD,EAAOzC,KAAK7B,EAAIsE,EAAOI,MAAM1E,EAC7BsE,EAAOM,eAGPL,GACFlN,KAAKyM,gBAITD,EAAA5M,UAAAmN,sBAAA,SAAsBvC,GAEpB,OADAA,EAAK7B,GAAK,EACN3I,KAAK0H,SAAS4E,eAAe9B,IAC/BA,EAAK7B,GAAK,GACH,IAEP3I,KAAK+M,sBAAsBvC,IACpB,IAIXgC,EAAA5M,UAAAoN,uBAAA,SAAuBxC,GAErB,OADAA,EAAK7B,GAAK,EACN3I,KAAK0H,SAAS4E,eAAe9B,IAC/BA,EAAK7B,GAAK,GACH,IAEP3I,KAAKgN,uBAAuBxC,IACrB,wBA9IZ5B,EAAAA,sDALO2D,KAsJRC,EAxJA,GCMAgB,EAAA,WAGE,SAAAA,EAAoB9F,GAAA1H,KAAA0H,SAAAA,EAmMtB,OAhME8F,EAAA5N,UAAAkJ,QAAA,kBACS9I,KAAK0H,UAGd8F,EAAA5N,UAAA6N,WAAA,SAAWhE,EAASe,EAAoBjB,GACtC,GAAIvJ,KAAK0H,SAASgG,OAChB1N,KAAK2N,kBAAkBpE,EAAUE,GAC7BzJ,KAAK0H,SAASC,SAASrG,wBACzBiI,EAASqE,SAASnE,EAAI,SAAWe,EAAK2B,KAAOnM,KAAK0H,SAASC,SAAStG,eAAkB,MAEtFkI,EAASqE,SAASnE,EAAI,SAAWzJ,KAAK0H,SAASmG,SAAW,EAAIrD,EAAK2B,KAAQ,MAEzEnM,KAAK0H,SAASC,SAASpG,uBACzBgI,EAASqE,SAASnE,EAAI,QAASzJ,KAAK0H,SAASC,SAASvG,cAAgB,MAEtEmI,EAASqE,SAASnE,EAAI,QAAS,IAGjCF,EAASqE,SAASnE,EAAI,gBAAiBzJ,KAAK0H,SAASC,SAASnF,OAAS,MACvE+G,EAASqE,SAASnE,EAAI,eAAgB,QACjC,KACCd,EAAIoD,KAAK+B,MAAM9N,KAAK0H,SAASqG,YAAcvD,EAAK7B,GAChDD,EAAIqD,KAAK+B,MAAM9N,KAAK0H,SAASsG,aAAexD,EAAK9B,GACjDuF,EAAQjO,KAAK0H,SAASqG,YAAcvD,EAAK0B,KAAOlM,KAAK0H,SAASC,SAASnF,OACvE0L,EAAUlO,KAAK0H,SAASsG,aAAexD,EAAK2B,KAAOnM,KAAK0H,SAASC,SAASnF,OAEhFxC,KAAKmO,gBAAgB5E,EAAUE,EAAId,EAAGD,GACtCa,EAASqE,SAASnE,EAAI,QAASwE,EAAQ,MACvC1E,EAASqE,SAASnE,EAAI,SAAUyE,EAAS,UACrCE,EAA8B,KAC9BC,EAA6B,KAC7BrO,KAAK0H,SAASC,SAASlF,cACrBzC,KAAK0H,SAASyE,OAAS3B,EAAK2B,KAAO3B,EAAK9B,IAExC0F,EAD+C,OAA7CpO,KAAK0H,SAASC,SAAS/E,kBACV5C,KAAK0H,SAASC,SAAS/E,kBAAoB,KAE3C5C,KAAK0H,SAASC,SAASnF,OAAS,MAG/CxC,KAAK0H,SAAS4G,UAAY9D,EAAK0B,KAAO1B,EAAK7B,IAE3C0F,EAD+C,OAA7CrO,KAAK0H,SAASC,SAAS/E,kBACX5C,KAAK0H,SAASC,SAAShF,iBAAmB,KAE1C3C,KAAK0H,SAASC,SAASnF,OAAS,OAKpD+G,EAASqE,SAASnE,EAAI,gBAAiB2E,GACvC7E,EAASqE,SAASnE,EAAI,eAAgB4E,KAI1Cb,EAAA5N,UAAA2O,eAAA,eACMC,EAAW,GACXC,EAAe,GACfC,EAAe,GACfC,EAAe,GACf3O,KAAK0H,SAASC,SAASzG,WAAaC,EAASlB,KAC/CuO,EAAWrN,EAASlB,IACpBwO,EAAetN,EAASjB,eACxBwO,EAAevN,EAAShB,iBACxBwO,EAAexN,EAASf,OACfJ,KAAK0H,SAASC,SAASzG,WAAaC,EAASjB,gBACtDF,KAAK0H,SAASsG,aAAehO,KAAK0H,SAASqG,YAC3CS,EAAWrN,EAASjB,eACpBuO,EAAetN,EAASlB,IACxByO,EAAevN,EAAShB,iBACxBwO,EAAexN,EAASf,OACfJ,KAAK0H,SAASC,SAASzG,WAAaC,EAAShB,kBACtDH,KAAK0H,SAASqG,YAAc/N,KAAK0H,SAASsG,aAC1CQ,EAAWrN,EAAShB,iBACpBsO,EAAetN,EAASlB,IACxByO,EAAevN,EAASjB,eACxByO,EAAexN,EAASf,OACfJ,KAAK0H,SAASC,SAASzG,WAAaC,EAASf,OACtDJ,KAAK0H,SAASqG,YAAc/N,KAAK0H,SAASC,SAASvG,eAChDpB,KAAK0H,SAASC,SAASzD,kBAAoB,EAAIlE,KAAK0H,SAASC,SAASnF,QACzExC,KAAK0H,SAASsG,aAAehO,KAAK0H,SAASC,SAAStG,gBACjDrB,KAAK0H,SAASC,SAASzD,kBAAoB,EAAIlE,KAAK0H,SAASC,SAASnF,QACzEgM,EAAWrN,EAASf,MACpBqO,EAAetN,EAASlB,IACxByO,EAAevN,EAASjB,eACxByO,EAAexN,EAAShB,kBACfH,KAAK0H,SAASC,SAASzG,WAAaC,EAASd,eACtDL,KAAK0H,SAASsG,aAAehO,KAAK0H,SAASC,SAAStG,gBACjDrB,KAAK0H,SAASC,SAASzD,kBAAoB,EAAIlE,KAAK0H,SAASC,SAASnF,QACzEgM,EAAWrN,EAASjB,eACpBuO,EAAetN,EAASlB,IACxByO,EAAevN,EAAShB,iBACxBwO,EAAexN,EAASf,OACfJ,KAAK0H,SAASC,SAASzG,WAAaC,EAASb,kBACtDN,KAAK0H,SAASqG,YAAc/N,KAAK0H,SAASC,SAASvG,eAChDpB,KAAK0H,SAASC,SAASzD,kBAAoB,EAAIlE,KAAK0H,SAASC,SAASnF,QACzEgM,EAAWrN,EAAShB,iBACpBsO,EAAetN,EAASlB,IACxByO,EAAevN,EAASjB,eACxByO,EAAexN,EAASf,OAGtBJ,KAAK0H,SAASgG,OAChB1N,KAAK0H,SAAS6B,SAASqF,YAAY5O,KAAK0H,SAAS+B,GAAI+E,GAErDxO,KAAK0H,SAAS6B,SAASiF,SAASxO,KAAK0H,SAAS+B,GAAI+E,GAEpDxO,KAAK0H,SAAS6B,SAASqF,YAAY5O,KAAK0H,SAAS+B,GAAIgF,GACrDzO,KAAK0H,SAAS6B,SAASqF,YAAY5O,KAAK0H,SAAS+B,GAAIiF,GACrD1O,KAAK0H,SAAS6B,SAASqF,YAAY5O,KAAK0H,SAAS+B,GAAIkF,IAGvDnB,EAAA5N,UAAAiP,mBAAA,SAAmBtP,GACjB,OAAAL,EAAA,GACKc,KAAK8O,gBAAgB9O,KAAK0H,SAASqG,YAAcxO,GAAE,CACtD0O,MAAOjO,KAAK0H,SAASqG,YAAc/N,KAAK0H,SAASC,SAASnF,OAAS,KACnE0L,OAAQlO,KAAK0H,SAASqH,SAASrP,OAASM,KAAK0H,SAASsG,aAAehO,KAAK0H,SAASC,SAASnF,OAAS,QAIzGgL,EAAA5N,UAAAoP,gBAAA,SAAgBzP,GACd,OAAAL,EAAA,GACKc,KAAKiP,eAAejP,KAAK0H,SAASsG,aAAezO,GAAE,CACtD0O,MAAOjO,KAAK0H,SAASwH,YAAYxP,OAASM,KAAK0H,SAASqG,YAAc/N,KAAK0H,SAASC,SAASnF,OAAS,KACtG0L,OAAQlO,KAAK0H,SAASsG,aAAehO,KAAK0H,SAASC,SAASnF,OAAS,QAIzEgL,EAAA5N,UAAAkP,gBAAA,SAAgBK,GACd,OAAInP,KAAK0H,SAASC,SAAS7E,wBAClB,CACLsM,UAAW,cAAgBD,EAAI,OAG1B,CACLxD,KAAO3L,KAAKqP,gBAAkBF,EAAK,OAKzC3B,EAAA5N,UAAAqP,eAAA,SAAeE,GACb,OAAInP,KAAK0H,SAASC,SAAS7E,wBAClB,CACLsM,UAAW,cAAgBD,EAAI,OAG1B,CACLtD,IAAK7L,KAAKsP,eAAiBH,EAAI,OAKrC3B,EAAA5N,UAAA+N,kBAAA,SAAkBpE,EAAqBE,GACjCzJ,KAAK0H,SAASC,SAAS7E,wBACzByG,EAASqE,SAASnE,EAAI,YAAa,KAEnCF,EAASqE,SAASnE,EAAI,MAAO,IAC7BF,EAASqE,SAASnE,EAAI,OAAQ,MAIlC+D,EAAA5N,UAAAuO,gBAAA,SAAgB5E,EAAqBE,EAASd,EAAWD,GACvD,GAAI1I,KAAK0H,SAASC,SAAS7E,wBAAyB,KAC5CsM,EAAY,eAAiBzG,EAAI,OAASD,EAAI,SACpDa,EAASqE,SAASnE,EAAI,YAAa2F,QAEnC7F,EAASqE,SAASnE,EAAI,OAAQzJ,KAAKqP,gBAAkB1G,EAAI,MACzDY,EAASqE,SAASnE,EAAI,MAAOzJ,KAAKsP,eAAiB5G,EAAI,OAI3D8E,EAAA5N,UAAAyP,cAAA,WACE,OAAIrP,KAAK0H,SAASC,SAASlF,YACsB,OAA3CzC,KAAK0H,SAASC,SAAS9E,gBAClB7C,KAAK0H,SAASC,SAAS9E,gBAEvB7C,KAAK0H,SAASC,SAASnF,OAGzB,GAIXgL,EAAA5N,UAAA0P,aAAA,WACE,OAAItP,KAAK0H,SAASC,SAASlF,YACqB,OAA1CzC,KAAK0H,SAASC,SAASjF,eAClB1C,KAAK0H,SAASC,SAASjF,eAEvB1C,KAAK0H,SAASC,SAASnF,OAGzB,uBAnMZoG,EAAAA,sDAJO2D,KA0MRiB,EAtMA,GCNA+B,EAAA,WAsDE,SAAAA,EAAY9F,EAAuBF,EAA4BmB,EAAiCT,GAA7DjK,KAAAuJ,SAAAA,EAA4BvJ,KAAA0K,MAAAA,EAAiC1K,KAAAiK,KAAAA,EARhGjK,KAAAkP,YAAc,GACdlP,KAAA+O,SAAW,GAQT/O,KAAKyJ,GAAKA,EAAG+F,cACbxP,KAAK2H,SAAW8H,KAAKC,MAAMD,KAAKE,UAAU1O,IAC1CjB,KAAK4P,wBAA0BrJ,EAAcK,SAAS5G,KAAK6P,gBAAgBlG,KAAK3J,MAAO,GACvFA,KAAK0N,QAAS,EACd1N,KAAK6N,SAAW,EAChB7N,KAAK8P,UAAY,EACjB9P,KAAKoN,KAAO,GACZpN,KAAK+N,YAAc,EACnB/N,KAAKgO,aAAe,EACpBhO,KAAK+P,gBAAiB,EACtB/P,KAAKgQ,UAAY,IAAInH,EAAkB7I,MACvCA,KAAKiQ,QAAU,IAAIzD,EAAgBxM,MACnCA,KAAKkQ,aAAe,IAAI1C,EAAiBxN,MA6a7C,OA1aSuP,EAAAY,uBAAP,SAA8B3F,EAAoB4F,GAChD,OAAO5F,EAAK7B,EAAIyH,EAAMzH,EAAIyH,EAAMlE,MAC3B1B,EAAK7B,EAAI6B,EAAK0B,KAAOkE,EAAMzH,GAC3B6B,EAAK9B,EAAI0H,EAAM1H,EAAI0H,EAAMjE,MACzB3B,EAAK9B,EAAI8B,EAAK2B,KAAOiE,EAAM1H,GAGlC6G,EAAA3P,UAAAyQ,SAAA,WACMrQ,KAAKsJ,QAAQvG,cACf/C,KAAKsJ,QAAQvG,aAAa/C,OAI9BuP,EAAA3P,UAAA0Q,YAAA,SAAYC,GACNA,EAAQjH,UACVtJ,KAAKwQ,aACLxQ,KAAKsJ,QAAQmH,IAAM,CACjBC,eAAgB1Q,KAAK0Q,eAAe/G,KAAK3J,MACzC2Q,OAAQ3Q,KAAK4Q,SAASjH,KAAK3J,MAC3B6Q,wBAAyB7Q,KAAK6Q,wBAAwBlH,KAAK3J,MAC3D8Q,yBAA0B9Q,KAAK8Q,yBAAyBnH,KAAK3J,MAC7D+Q,wBAAyB/Q,KAAK+Q,wBAAwBpH,KAAK3J,OAE7DA,KAAKsO,QAAUtO,KAAK2H,SAAS/F,QAC7B5B,KAAKmM,KAAOnM,KAAK2H,SAAS7F,QAC1B9B,KAAKwB,cACLxB,KAAK6P,oBAITN,EAAA3P,UAAA+Q,OAAA,eACMzC,EACAD,EAC2B,QAA3BjO,KAAK2H,SAASzG,UAAuBlB,KAAK0N,QAI5CO,EAAQjO,KAAKyJ,GAAGuH,YAChB9C,EAASlO,KAAKyJ,GAAGwH,eAJjBhD,EAAQjO,KAAKyJ,GAAGyH,YAChBhD,EAASlO,KAAKyJ,GAAG0H,cAKdlD,IAAUjO,KAAK6N,UAAYK,IAAWlO,KAAK8P,YAAc9P,KAAKoR,mBACjEpR,KAAK4Q,YAITrB,EAAA3P,UAAA4Q,WAAA,WACExQ,KAAK2H,SAAWpB,EAAcC,MAAMxG,KAAK2H,SAAU3H,KAAKsJ,QAAStJ,KAAK2H,UACjE3H,KAAK2H,SAAS1B,qBAAwBjG,KAAKqR,aAErCrR,KAAK2H,SAAS1B,qBAAuBjG,KAAKqR,eACnDrR,KAAKqR,eACLrR,KAAKqR,aAAe,MAHpBrR,KAAKqR,aAAerR,KAAKuJ,SAASC,OAAO,SAAU,SAAUxJ,KAAK4Q,SAASjH,KAAK3J,OAKlFA,KAAKgQ,UAAU7G,iBAGjBoG,EAAA3P,UAAA8Q,eAAA,WACE1Q,KAAKwQ,aAEL,QADIc,EAAuBtR,KAAKoN,KAAK1N,OAAS,EACvC4R,GAAgB,EAAGA,IACftR,KAAKoN,KAAKkE,GACZnI,gBAETnJ,KAAK6P,mBAGPN,EAAA3P,UAAA2R,YAAA,WACMvR,KAAKqR,cACPrR,KAAKqR,eAEHrR,KAAKsJ,SAAWtJ,KAAKsJ,QAAQrG,iBAC/BjD,KAAKsJ,QAAQrG,gBAAgBjD,MAE3BA,KAAKsJ,SAAWtJ,KAAKsJ,QAAQmH,MAC/BzQ,KAAKsJ,QAAQmH,IAAIE,OAAS3N,UAC1BhD,KAAKsJ,QAAQmH,IAAIC,eAAiB1N,UAClChD,KAAKsJ,QAAQmH,IAAII,wBAA0B7N,UAC3ChD,KAAKsJ,QAAQmH,IAAMzN,WAErBhD,KAAKgQ,UAAUlH,iBACR9I,KAAKgQ,UACZhQ,KAAKiQ,QAAQnH,iBACN9I,KAAKiQ,SAGdV,EAAA3P,UAAAgR,SAAA,WACE5Q,KAAKwB,cACLxB,KAAK6P,mBAGPN,EAAA3P,UAAAwR,gBAAA,eACQJ,EAAchR,KAAKyJ,GAAGuH,YACtBE,EAAclR,KAAKyJ,GAAGyH,YACtBM,EAAcxR,KAAKyJ,GAAG+H,YACtBP,EAAejR,KAAKyJ,GAAGwH,aACvBE,EAAenR,KAAKyJ,GAAG0H,aACvBM,EAAezR,KAAKyJ,GAAGgI,aAK7B,QAJ8BT,EAAcE,GAAeO,EAAeN,GACrEM,EAAeN,EAAeD,EAAcF,MACjBC,EAAeE,GAC1CK,EAAcN,GAAeM,EAAcN,EAAcC,EAAeF,IAO/E1B,EAAA3P,UAAA4B,YAAA,eACQiI,EAAKzJ,KAAKyJ,GACZwE,EAAQxE,EAAGuH,YACX9C,EAASzE,EAAGwH,aACZjR,KAAK2H,SAASnG,aAA0C,QAA3BxB,KAAK2H,SAASzG,WAAuBlB,KAAK0N,QACzEO,EAAQxE,EAAGyH,YACXhD,EAASzE,EAAG0H,eAEZlD,EAAQxE,EAAGuH,YACX9C,EAASzE,EAAGwH,cAEdjR,KAAK6N,SAAWI,EAChBjO,KAAK8P,UAAY5B,GAGnBqB,EAAA3P,UAAA8R,kBAAA,WACE1R,KAAKwB,eACAxB,KAAK0N,QAAU1N,KAAK2H,SAAShG,iBAAmB3B,KAAK6N,UACxD7N,KAAK0N,QAAU1N,KAAK0N,OACpB1N,KAAKuJ,SAASiF,SAASxO,KAAKyJ,GAAI,WACvBzJ,KAAK0N,QAAU1N,KAAK2H,SAAShG,iBAAmB3B,KAAK6N,WAC9D7N,KAAK0N,QAAU1N,KAAK0N,OACpB1N,KAAKuJ,SAASqF,YAAY5O,KAAKyJ,GAAI,WAKrC,QADyCwD,EAFrCd,EAAOnM,KAAK2H,SAAS7F,QAASwM,EAAUtO,KAAK2H,SAAS/F,QAEtD0P,EAAetR,KAAKoN,KAAK1N,OAAS,EAC/B4R,GAAgB,EAAGA,KACxBrE,EAASjN,KAAKoN,KAAKkE,IACPK,YACVxF,EAAOJ,KAAK6F,IAAIzF,EAAMc,EAAOI,MAAM3E,EAAIuE,EAAOI,MAAMlB,MACpDmC,EAAUvC,KAAK6F,IAAItD,EAASrB,EAAOI,MAAM1E,EAAIsE,EAAOI,MAAMnB,OAI1DlM,KAAKsO,UAAYA,GAAWtO,KAAKmM,OAASA,IAC5CnM,KAAKsO,QAAUA,EACftO,KAAKmM,KAAOA,EACRnM,KAAKsJ,QAAQpG,yBACflD,KAAKsJ,QAAQpG,wBAAwBlD,QAK3CuP,EAAA3P,UAAAiQ,gBAAA,WAME,GALI7P,KAAKiQ,SACPjQ,KAAKiQ,QAAQxD,eAGfzM,KAAK0R,oBACD1R,KAAK2H,SAASlF,YAAa,KACzBoP,GAAe7R,KAAK2H,SAASnF,OACK,OAAlCxC,KAAK2H,SAAS9E,iBAChBgP,GAAe7R,KAAK2H,SAAS9E,gBAC7B7C,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,eAAgBzJ,KAAK2H,SAAS9E,gBAAkB,QAEhFgP,GAAe7R,KAAK2H,SAASnF,OAC7BxC,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,eAAgBzJ,KAAK2H,SAASnF,OAAS,OAElC,OAAnCxC,KAAK2H,SAAShF,kBAChBkP,GAAe7R,KAAK2H,SAAShF,iBAC7B3C,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,gBAAiBzJ,KAAK2H,SAAShF,iBAAmB,QAElFkP,GAAe7R,KAAK2H,SAASnF,OAC7BxC,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,gBAAiBzJ,KAAK2H,SAASnF,OAAS,OAE1ExC,KAAK+N,aAAe/N,KAAK6N,SAAWgE,GAAe7R,KAAKsO,YACpDwD,GAAgB9R,KAAK2H,SAASnF,OACG,OAAjCxC,KAAK2H,SAASjF,gBAChBoP,GAAgB9R,KAAK2H,SAASjF,eAC9B1C,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,cAAezJ,KAAK2H,SAASjF,eAAiB,QAE9EoP,GAAgB9R,KAAK2H,SAASnF,OAC9BxC,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,cAAezJ,KAAK2H,SAASnF,OAAS,OAEhC,OAApCxC,KAAK2H,SAAS/E,mBAChBkP,GAAgB9R,KAAK2H,SAAS/E,kBAC9B5C,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,iBAAkBzJ,KAAK2H,SAAS/E,kBAAoB,QAEpFkP,GAAgB9R,KAAK2H,SAASnF,OAC9BxC,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,iBAAkBzJ,KAAK2H,SAASnF,OAAS,OAE3ExC,KAAKgO,cAAgBhO,KAAK8P,UAAYgC,GAAgB9R,KAAKmM,UAE3DnM,KAAK+N,aAAe/N,KAAK6N,SAAW7N,KAAK2H,SAASnF,QAAUxC,KAAKsO,QACjEtO,KAAKgO,cAAgBhO,KAAK8P,UAAY9P,KAAK2H,SAASnF,QAAUxC,KAAKmM,KACnEnM,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,eAAgB,OAChDzJ,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,gBAAiB,OACjDzJ,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,cAAe,OAC/CzJ,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,iBAAkB,OAEpDzJ,KAAKkQ,aAAa3B,iBAElBvO,KAAK+R,aAED/R,KAAK2H,SAASnG,aAChBxB,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,QAAUzJ,KAAKsO,QAAUtO,KAAK+N,YAAc/N,KAAK2H,SAASnF,OAAU,MACpGxC,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,SAAWzJ,KAAKmM,KAAOnM,KAAKgO,aAAehO,KAAK2H,SAASnF,OAAU,QAEnGxC,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,QAAS,IACzCzJ,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,SAAU,KAI5C,QADiDwD,EAA7CqE,EAAuBtR,KAAKoN,KAAK1N,OAAS,EACvC4R,GAAgB,EAAGA,KACxBrE,EAASjN,KAAKoN,KAAKkE,IACZU,UACP/E,EAAOgF,KAAKC,SACZjF,EAAO0D,OAAOuB,SAGhB/K,WAAWnH,KAAK2Q,OAAOhH,KAAK3J,MAAO,MAGrCuP,EAAA3P,UAAAmS,WAAA,WACoC,WAA9B/R,KAAK2H,SAAS5B,aAA6B/F,KAAK0N,OAEX,kBAA9B1N,KAAK2H,SAAS5B,aAAmC/F,KAAK+P,eAC/D/P,KAAKuJ,SAASiF,SAASxO,KAAKyJ,GAAI,gBACO,SAA9BzJ,KAAK2H,SAAS5B,aAA2B/F,KAAK+P,iBAAkB/P,KAAK0N,QAC9E1N,KAAKuJ,SAASqF,YAAY5O,KAAKyJ,GAAI,gBAJnCzJ,KAAKuJ,SAASiF,SAASxO,KAAKyJ,GAAI,gBAMlCzJ,KAAK0R,oBACL1R,KAAKkP,YAAYxP,OAASqM,KAAK6F,IAAI5R,KAAKsO,QAASvC,KAAKC,MAAMhM,KAAK6N,SAAW7N,KAAK+N,eAAiB,EAClG/N,KAAK+O,SAASrP,OAASqM,KAAK6F,IAAI5R,KAAKmM,KAAMJ,KAAKC,MAAMhM,KAAK8P,UAAY9P,KAAKgO,gBAAkB,EAC9FhO,KAAK0K,MAAMC,gBAGb4E,EAAA3P,UAAAuS,QAAA,SAAQC,GACFA,EAAc/E,MAAMnB,OAASlJ,YAC/BoP,EAAc/E,MAAMnB,KAAOlM,KAAK2H,SAAS3F,gBACzCoQ,EAAc5H,KAAK0B,KAAOkG,EAAc/E,MAAMnB,KAC9CkG,EAAc7E,eAEZ6E,EAAc/E,MAAMlB,OAASnJ,YAC/BoP,EAAc/E,MAAMlB,KAAOnM,KAAK2H,SAAS1F,gBACzCmQ,EAAc5H,KAAK2B,KAAOiG,EAAc/E,MAAMlB,KAC9CiG,EAAc7E,gBAEe,IAA3B6E,EAAc/E,MAAM1E,IAAuC,IAA3ByJ,EAAc/E,MAAM3E,EACtD1I,KAAKqS,iBAAiBD,GACbpS,KAAKsM,eAAe8F,EAAc/E,SACtCrN,KAAK2H,SAASzB,kBACjBkM,EAAcT,WAAY,EAC1BW,QAAQC,KAAK,6EACX9C,KAAKE,UAAUyC,EAAc5H,KAAM,CAAC,OAAQ,OAAQ,IAAK,QAExDxK,KAAK2H,SAASrB,8BAGjB8L,EAAcT,WAAY,EAF1B3R,KAAKqS,iBAAiBD,IAK1BpS,KAAKoN,KAAKoF,KAAKJ,GACfpS,KAAK4P,2BAGPL,EAAA3P,UAAA6S,WAAA,SAAWL,GACTpS,KAAKoN,KAAKsF,OAAO1S,KAAKoN,KAAK/E,QAAQ+J,GAAgB,GACnDpS,KAAK4P,0BACD5P,KAAKsJ,QAAQhG,qBACftD,KAAKsJ,QAAQhG,oBAAoB8O,EAAc5H,KAAM4H,IAIzD7C,EAAA3P,UAAA0M,eAAA,SAAe9B,OACTmI,GAAsD,EAO1D,GANI3S,KAAKsJ,QAAQ/F,uBACfoP,GAAa3S,KAAKsJ,QAAQ/F,qBAAqBiH,KAE5CmI,GAAa3S,KAAK4S,mBAAmBpI,KACxCmI,GAAY,IAETA,EAAW,KACRE,EAAI7S,KAAK8S,iBAAiBtI,GAC5BqI,IACFF,EAAYE,GAGhB,OAAOF,GAGTpD,EAAA3P,UAAAgT,mBAAA,SAAmBpI,OACXuI,EAAqBvI,EAAK9B,GAAK,GAAK8B,EAAK7B,GAAK,EAC9CqK,EAAcxI,EAAK0B,KAAO1B,EAAK7B,GAAK3I,KAAK2H,SAAS9F,QAClDoR,EAAczI,EAAK2B,KAAO3B,EAAK9B,GAAK1I,KAAK2H,SAAS5F,QAClDG,EAAcsI,EAAKtI,cAAgBc,UAAYhD,KAAK2H,SAASzF,YAAcsI,EAAKtI,YAChFE,EAAcoI,EAAKpI,cAAgBY,UAAYhD,KAAK2H,SAASvF,YAAcoI,EAAKpI,YAChFD,EAAcqI,EAAKrI,cAAgBa,UAAYhD,KAAK2H,SAASxF,YAAcqI,EAAKrI,YAChFE,EAAcmI,EAAKnI,cAAgBW,UAAYhD,KAAK2H,SAAStF,YAAcmI,EAAKnI,YAChF6Q,EAAe1I,EAAK0B,MAAQhK,GAAesI,EAAK0B,MAAQ9J,EACxD+Q,EAAe3I,EAAK2B,MAAQhK,GAAeqI,EAAK2B,MAAQ9J,EACxD+Q,EAAe5I,EAAKlI,cAAgBU,UAAYhD,KAAK2H,SAASrF,YAAckI,EAAKlI,YACjF+Q,EAAe7I,EAAKjI,cAAgBS,UAAYhD,KAAK2H,SAASpF,YAAciI,EAAKjI,YACjF+Q,EAAO9I,EAAK0B,KAAO1B,EAAK2B,KAG9B,QAAS4G,GAAsBC,GAAeC,GAAeC,GAAgBC,GAF3DC,GAAgBE,GAChBD,GAAgBC,IAIpC/D,EAAA3P,UAAAkT,iBAAA,SAAiBtI,GAEf,QADiDyC,EAA7CqE,EAAuBtR,KAAKoN,KAAK1N,OAAS,EACvC4R,GAAgB,EAAGA,IAExB,IADArE,EAASjN,KAAKoN,KAAKkE,IACRjE,QAAU7C,GAAQ+E,EAAkBY,uBAAuBlD,EAAOI,MAAO7C,GAClF,OAAOyC,EAGX,OAAO,GAGTsC,EAAA3P,UAAA2T,kBAAA,SAAkB/I,GAGhB,QADiDyC,EAD3CzE,EAA2C,GAC7C8I,EAAuBtR,KAAKoN,KAAK1N,OAAS,EACvC4R,GAAgB,EAAGA,KACxBrE,EAASjN,KAAKoN,KAAKkE,IACRjE,QAAU7C,GAAQ+E,EAAkBY,uBAAuBlD,EAAOI,MAAO7C,IAClFhC,EAAEgK,KAAKvF,GAGX,OAAOzE,GAGT+G,EAAA3P,UAAAyS,iBAAA,SAAiBD,GACXpS,KAAK6Q,wBAAwBuB,EAAc/E,QAC7C+E,EAAcT,WAAY,EAC1BS,EAAc5H,KAAK7B,EAAIyJ,EAAc/E,MAAM1E,EAC3CyJ,EAAc5H,KAAK9B,EAAI0J,EAAc/E,MAAM3E,EAC3C0J,EAAc7E,gBAEd6E,EAAcT,WAAY,EACrB3R,KAAK2H,SAASzB,iBACjBoM,QAAQC,KAAK,oDACX9C,KAAKE,UAAUyC,EAAc5H,KAAM,CAAC,OAAQ,OAAQ,IAAK,SAKjE+E,EAAA3P,UAAAiR,wBAAA,SAAwB2C,EAAuBC,QAAA,IAAAA,IAAAA,EAAA,KACvB,IAAlBD,EAAQtH,OACVsH,EAAQtH,KAAOlM,KAAK2H,SAAS3F,kBAET,IAAlBwR,EAAQrH,OACVqH,EAAQrH,KAAOnM,KAAK2H,SAAS1F,iBAE/BjC,KAAK0R,oBAEL,QADqCgC,EAAjCC,EAAYF,EAAa/K,GAAK,EAC3BiL,EAAY3T,KAAKmM,KAAMwH,IAG5B,IAFAH,EAAQ9K,EAAIiL,EACZD,EAAYD,EAAa9K,GAAK,EACvB+K,EAAY1T,KAAKsO,QAASoF,IAE/B,GADAF,EAAQ7K,EAAI+K,GACP1T,KAAKsM,eAAekH,GACvB,OAAO,MAIPI,EAAe5T,KAAK2H,SAAS5F,SAAW/B,KAAKmM,KAAOqH,EAAQrH,KAC5D0H,EAAkB7T,KAAK2H,SAAS9F,SAAW7B,KAAKsO,QAAUkF,EAAQtH,KAExE,QADkBlM,KAAKmM,MAAQnM,KAAKsO,SAAWsF,IAC7BC,GAChBL,EAAQ7K,EAAI3I,KAAKsO,QACjBkF,EAAQ9K,EAAI,GACL,KACEkL,IACTJ,EAAQ9K,EAAI1I,KAAKmM,KACjBqH,EAAQ7K,EAAI,GACL,IAKX4G,EAAA3P,UAAAkR,yBAAA,SAAyBtG,OACjBsJ,EAAU3U,OAAOC,OAAO,GAAIoL,GAElC,OADAxK,KAAK6Q,wBAAwBiD,GACtBA,GAGTvE,EAAA3P,UAAAmR,wBAAA,SAAwBvG,OAClBuJ,EAAyC,CAACrL,EAAG,EAAGC,EAAG,GACvDoL,EAAe/T,KAAKoN,KAAK4G,OAAM,SAAEC,EAAWC,OACpCC,EAAa,CAACzL,EAAGwL,EAAK7G,MAAM3E,EAAIwL,EAAK7G,MAAMlB,KAAO,EAAGxD,EAAGuL,EAAK7G,MAAM1E,EAAIuL,EAAK7G,MAAMnB,KAAO,GAC/F,OAAqD,IAAjD3F,EAAcgC,aAAa0L,EAAME,GAC5BA,EAEAF,GAERF,OAEGD,EAAU3U,OAAOC,OAAO,GAAIoL,GAElC,OADAxK,KAAK6Q,wBAAwBiD,EAASC,GAC/BD,GAGTvE,EAAA3P,UAAAkM,kBAAA,SAAkBnD,EAAWyL,EAA0BC,OAC/CC,EAAWF,EAAezL,EAAI3I,KAAK+N,aACzC,OAAIsG,EACKC,EAEAvI,KAAK6F,IAAI0C,EAAU,IAI9B/E,EAAA3P,UAAAqM,kBAAA,SAAkBvD,EAAW0L,EAA0BC,OAC/CC,EAAWF,EAAe1L,EAAI1I,KAAKgO,cACzC,OAAIqG,EACKC,EAEAvI,KAAK6F,IAAI0C,EAAU,IAI9B/E,EAAA3P,UAAA2U,kBAAA,SAAkB5L,GAChB,OAAOA,EAAI3I,KAAK+N,aAGlBwB,EAAA3P,UAAA4U,kBAAA,SAAkB9L,GAChB,OAAOA,EAAI1I,KAAKgO,kCArdnByG,EAAAA,UAASxN,KAAA,CAAC,CACTyN,SAAU,WACVC,SAAA,4WAEAC,cAAeC,EAAAA,kBAAkBpU,44BA1BjCqU,EAAAA,kBAMAC,EAAAA,iBARAC,EAAAA,yBAIAC,EAAAA,2CA2BCC,EAAAA,SAgdH3F,EAhfA,gBCyBA,OAnBA,gBCNA4F,EAAA,WAWE,SAAAA,EAAYC,GACVpV,KAAKoV,aAAeA,EACpBpV,KAAK0H,SAAW0N,EAAa1N,SA0EjC,OAvEEyN,EAAAvV,UAAAkJ,QAAA,kBACS9I,KAAK0H,gBACL1H,KAAKoV,oBACLpV,KAAKqV,YAGdF,EAAAvV,UAAA0V,UAAA,WACMtV,KAAK0H,SAASC,SAAStC,OACzBrF,KAAKuV,gBACLvV,KAAKwV,UAAUxV,KAAKoV,gBAIxBD,EAAAvV,UAAA2V,cAAA,WACE,GAAIvV,KAAKqV,WAAY,KACb1M,EAAY3I,KAAKqV,WAAWhI,MAAM1E,EAClCD,EAAY1I,KAAKqV,WAAWhI,MAAM3E,EACxC1I,KAAKqV,WAAWhI,MAAM1E,EAAI3I,KAAKqV,WAAW7K,KAAK7B,GAAK,EACpD3I,KAAKqV,WAAWhI,MAAM3E,EAAI1I,KAAKqV,WAAW7K,KAAK9B,GAAK,EAChD1I,KAAK0H,SAAS4E,eAAetM,KAAKqV,WAAWhI,QAC/CrN,KAAKqV,WAAWhI,MAAM1E,EAAIA,EAC1B3I,KAAKqV,WAAWhI,MAAM3E,EAAIA,IAE1B1I,KAAKqV,WAAWrD,UAChBhS,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAKoV,aAAa5K,KAAK7B,GAAK,EACxD3I,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAKoV,aAAa5K,KAAK9B,GAAK,EACxD1I,KAAKqV,WAAarS,aAMxBmS,EAAAvV,UAAA6V,gBAAA,WACMzV,KAAKqV,aACPrV,KAAKqV,WAAWhI,MAAM1E,EAAI3I,KAAKqV,WAAW7K,KAAK7B,GAAK,EACpD3I,KAAKqV,WAAWhI,MAAM3E,EAAI1I,KAAKqV,WAAW7K,KAAK9B,GAAK,EACpD1I,KAAKqV,WAAWrD,UAChBhS,KAAKqV,WAAarS,YAItBmS,EAAAvV,UAAA8V,YAAA,WACM1V,KAAKqV,aACPrV,KAAKqV,WAAWM,iBAAiB3V,KAAKqV,WAAWhI,MAAOrN,KAAKqV,WAAW7K,MACxExK,KAAKqV,WAAarS,YAItBmS,EAAAvV,UAAA4V,UAAA,SAAUI,OACFC,EAA6B7V,KAAK0H,SAAS4E,eAAesJ,EAASvI,OACzE,GAAIwI,IAAmD,IAA1BA,GAAkCA,EAAsBC,eAAgB,KAC7FC,EAAsDF,EACtDG,EAAiBD,EAAoB1I,MAAM1E,EAC3CsN,EAAiBF,EAAoB1I,MAAM3E,EAC3CwN,EAAQN,EAASvI,MAAM1E,EACvBwN,EAAQP,EAASvI,MAAM3E,EAC7BqN,EAAoB1I,MAAM1E,EAAIiN,EAASpL,KAAK7B,GAAK,EACjDoN,EAAoB1I,MAAM3E,EAAIkN,EAASpL,KAAK9B,GAAK,EACjDkN,EAASvI,MAAM1E,EAAIoN,EAAoBvL,KAAK7B,GAAK,EACjDiN,EAASvI,MAAM3E,EAAIqN,EAAoBvL,KAAK9B,GAAK,EAC7C1I,KAAK0H,SAAS4E,eAAeyJ,EAAoB1I,QAAUrN,KAAK0H,SAAS4E,eAAesJ,EAASvI,QACnGuI,EAASvI,MAAM1E,EAAIuN,EACnBN,EAASvI,MAAM3E,EAAIyN,EACnBJ,EAAoB1I,MAAM1E,EAAIqN,EAC9BD,EAAoB1I,MAAM3E,EAAIuN,IAE9BF,EAAoB/D,UACpBhS,KAAKqV,WAAaU,yBA9EzBnN,EAAAA,sDAHOwN,KAqFRjB,EAvFA,GVKMkB,EAAmB,GASzB,SAAgBC,EAAO5O,EAAsCiE,EAAcE,EAAaoC,EAAeC,EAChFnJ,EAAewR,EACfC,EAAiC7F,EAAkB8F,GACxEhY,EAAoBiJ,EAASC,SAASlJ,kBACtCC,EAAcgJ,EAASC,SAASjJ,YAChCC,EAAkB+I,EAAS+B,GAC3B7K,EAAc+R,EACd9R,EAAkB4X,MAEZvF,EAAcvS,EAAgBuS,YAC9BC,EAAexS,EAAgBwS,aAC/BuF,EAAa/X,EAAgB+M,WAC7BiL,EAAYhY,EAAgBiN,UAC5BgL,EAAgB/K,EAAM8K,EACtBE,EAAmB1F,EAAewF,EAAY9K,EAAMqC,EAE1D,IAAKxG,EAASC,SAAStB,sBACrB,GAAIkQ,EAAUhP,QAAUxC,EAAEwC,SAAWsP,EAAmBpY,EAAmB,CAEzE,GADAqY,IACKlY,GAAeC,IAAoBA,EAAgBS,GAAML,EAC5D,OAEFA,EAAY8X,EAAc,EAAGP,EAAuBD,QAC/C,GAAIA,EAAUhP,QAAUxC,EAAEwC,SAAWoP,EAAY,GAAKC,EAAgBnY,EAAmB,CAE9F,GADAuY,IACKpY,GAAeC,IAAoBA,EAAgBW,GAAMR,EAC5D,OAEFA,EAAY+X,GAAe,EAAGP,EAAuBD,QAC5CA,EAAUhP,UAAYxC,EAAEwC,SACjC0P,QAIEC,EAAkBR,EAAaxF,EAAcvF,EAAOsC,EACpDkJ,EAAiBxL,EAAO+K,EAE9B,IAAKhP,EAASC,SAASvB,wBACrB,GAAImQ,EAAUlP,QAAUtC,EAAEsC,SAAW6P,GAAmBzY,EAAmB,CAEzE,GADA2Y,IACKxY,GAAeC,IAAoBA,EAAgBkG,GAAMjG,EAC5D,OAEFA,EAAYuY,EAAgB,EAAGb,EAAuBD,QACjD,GAAIA,EAAUlP,QAAUtC,EAAEsC,SAAWqP,EAAa,GAAKS,EAAiB1Y,EAAmB,CAEhG,GADA6Y,IACK1Y,GAAeC,IAAoBA,EAAgBmG,GAAMjG,EAC5D,OAEFA,EAAYsY,GAAiB,EAAGb,EAAuBD,QAC9CA,EAAUlP,UAAYtC,EAAEsC,SACjCkQ,IAKN,SAASR,EAAcS,EAAchB,EAAiCD,OAChEhP,EAAUgP,EAAUhP,QACxB,OAAOkQ,YAAW,aACX9Y,IAA6B,IAAV6Y,GAAe7Y,EAAgBiN,UAAYlN,EAAc,IAC/EuY,IAEFtY,EAAgBiN,WAAa4L,EAAO9Y,EACpC6I,GAAWiQ,EAAO9Y,EAClB8X,EAAsB,CAACnP,QAASkP,EAAUlP,QAASE,QAASA,KAC3D8O,GAGL,SAASgB,EAAgBG,EAAchB,EAAiCD,OAClElP,EAAUkP,EAAUlP,QACxB,OAAOoQ,YAAW,aACX9Y,IAA6B,IAAV6Y,GAAe7Y,EAAgB+M,WAAahN,EAAc,IAChF6Y,IAEF5Y,EAAgB+M,YAAc8L,EAAO9Y,EAErC8X,EAAsB,CAACnP,QADvBA,GAAWmQ,EAAO9Y,EACuB6I,QAASgP,EAAUhP,WAC3D8O,GAGL,SAAgBqB,IACdH,IACAN,IACAtY,EAAkBqE,UAGpB,SAASuU,IACPD,IACAF,IAGF,SAASH,IACPH,IACAE,IAGF,SAASM,IACHxY,IACF6Y,cAAc7Y,GACdA,EAAY,GAIhB,SAASsY,IACHrY,IACF4Y,cAAc5Y,GACdA,EAAY,GAIhB,SAASiY,IACH/X,IACF0Y,cAAc1Y,GACdA,EAAY,GAIhB,SAAS6X,IACH9X,IACF2Y,cAAc3Y,GACdA,EAAY,GWtIhB,IAAA4Y,EAAA,WA0BE,SAAAA,EAAYxC,GACVpV,KAAK6X,YAAc,GACnB7X,KAAK8X,gBAAkB,GACvB9X,KAAK+X,oBAAsB,GAC3B/X,KAAKgY,gBAAkB,GACvBhY,KAAKoV,aAAeA,EACpBpV,KAAK0H,SAAW0N,EAAa1N,SAC7B1H,KAAKiY,WAAa,CAChBC,SAAU,CAAClY,KAAKmY,QAASnY,KAAKoY,SAAUpY,KAAKqY,SAAUrY,KAAKsY,SAC5DC,SAAU,CAACvY,KAAKsY,QAAStY,KAAKoY,SAAUpY,KAAKqY,SAAUrY,KAAKmY,SAC5DK,UAAW,CAACxY,KAAKoY,SAAUpY,KAAKsY,QAAStY,KAAKmY,QAASnY,KAAKqY,UAC5DI,UAAW,CAACzY,KAAKqY,SAAUrY,KAAKsY,QAAStY,KAAKmY,QAASnY,KAAKoY,WAE9DpY,KAAKyY,UAAY,YACjBzY,KAAKwY,UAAY,YACjBxY,KAAKkY,SAAW,WAChBlY,KAAKuY,SAAW,WAgRpB,OA7QEX,EAAAhY,UAAAkJ,QAAA,kBACS9I,KAAK0H,gBACL1H,KAAKoV,cAGdwC,EAAAhY,UAAA0F,UAAA,SAAUoT,EAAmBC,GAC3B,GAAI3Y,KAAK0H,SAASC,SAASrC,YAAcqT,EAAS,CAChD3Y,KAAK4Y,iBAAmB,OAClBC,EAAS7Y,KAAKwS,KAAKxS,KAAKoV,aAAcsD,GAO5C,OANKG,GACH7Y,KAAK8Y,mBAEP9Y,KAAK4Y,iBAAmB,GACxB5Y,KAAK8X,gBAAkB,GACvB9X,KAAK+X,oBAAsB,GACpBc,EAEP,OAAO,GAIXjB,EAAAhY,UAAAkZ,iBAAA,WAEE,QADIvZ,EAAIS,KAAK8X,gBAAgBpY,OAAS,EAC/BH,GAAK,EAAGA,IACbS,KAAK+Y,qBAAqB/Y,KAAK8X,gBAAgBvY,KAInDqY,EAAAhY,UAAAoZ,aAAA,WAIE,QADIC,EAFA1Z,EAAI,EACF4N,EAAYnN,KAAK6X,YAAYnY,OAE5BH,EAAI4N,EAAG5N,KACZ0Z,EAAajZ,KAAK6X,YAAYtY,IACnB8N,MAAM1E,EAAIsQ,EAAWzO,KAAK7B,GAAK,EAC1CsQ,EAAW5L,MAAM3E,EAAIuQ,EAAWzO,KAAK9B,GAAK,EAC1CuQ,EAAWjH,UAEbhS,KAAK6X,YAAc,GACnB7X,KAAKgY,gBAAkB,IAGzBJ,EAAAhY,UAAAsZ,eAAA,WAIE,QADID,EAFA1Z,EAAI,EACF4N,EAAYnN,KAAK6X,YAAYnY,OAE5BH,EAAI4N,EAAG5N,KACZ0Z,EAAajZ,KAAK6X,YAAYtY,IACnBoW,iBAAiBsD,EAAW5L,MAAO4L,EAAWzO,MAE3DxK,KAAK6X,YAAc,GACnB7X,KAAKgY,gBAAkB,IAGzBJ,EAAAhY,UAAAuZ,cAAA,WAGE,QAFI5Z,EAAYS,KAAK6X,YAAYnY,OAAS,EACtC0Z,GAAS,EACN7Z,GAAK,EAAGA,IACTS,KAAKqZ,gBAAgBrZ,KAAK6X,YAAYtY,GAAIA,KAC5C6Z,GAAS,GAGTA,GACFpZ,KAAKmZ,iBAIDvB,EAAAhY,UAAA4S,KAAR,SAAa4C,EAA8CsD,GACzD,GAAI1Y,KAAK0H,SAASkL,mBAAmBwC,EAAa/H,OAChD,OAAO,EAET,GAAkB,KAAdqL,EACF,OAAO,EAMT,QAHsBY,EADhB9Q,EAA2CxI,KAAK0H,SAAS6L,kBAAkB6B,EAAa/H,OAC1F9N,EAAIiJ,EAAE9I,OAAS,EACf6Z,GAAW,EACT9Q,EAA2C,GAC1ClJ,GAAK,EAAGA,IAAK,CAElB,IADA+Z,EAAgB9Q,EAAEjJ,MACIS,KAAKoV,aAAc,CACvCmE,GAAW,EACX,MAEF,IAAKD,EAAcxD,eAAgB,CACjCyD,GAAW,EACX,MAKF,GAHgBvZ,KAAK8X,gBAAgB0B,KAAI,SAAE/P,GACzC,OAAOA,EAAG4D,MAAM1E,IAAM2Q,EAAcjM,MAAM1E,GAAKc,EAAG4D,MAAM3E,IAAM4Q,EAAcjM,MAAM3E,IAEvE,CACX6Q,GAAW,EACX,MAEF,GAAIvZ,KAAKiY,WAAWS,GAAW,GAAG5Y,KAAKE,KAAMsZ,EAAelE,GAC1DpV,KAAK4Y,iBAAiBpG,KAAK8G,GAC3B7Q,EAAE+J,KAAK8G,QACF,GAAItZ,KAAKiY,WAAWS,GAAW,GAAG5Y,KAAKE,KAAMsZ,EAAelE,GACjEpV,KAAK4Y,iBAAiBpG,KAAK8G,GAC3B7Q,EAAE+J,KAAK8G,QACF,GAAItZ,KAAKiY,WAAWS,GAAW,GAAG5Y,KAAKE,KAAMsZ,EAAelE,GACjEpV,KAAK4Y,iBAAiBpG,KAAK8G,GAC3B7Q,EAAE+J,KAAK8G,OACF,CAAA,IAAItZ,KAAKiY,WAAWS,GAAW,GAAG5Y,KAAKE,KAAMsZ,EAAelE,GAG5D,CACLmE,GAAW,EACX,MAJAvZ,KAAK4Y,iBAAiBpG,KAAK8G,GAC3B7Q,EAAE+J,KAAK8G,IAMX,IAAKC,IACHha,EAAIS,KAAK4Y,iBAAiBa,YAAYhR,EAAE,MAC/B,EAEP,QADIiR,EAAI1Z,KAAK4Y,iBAAiBlZ,OAAS,EAChCga,GAAKna,EAAGma,IACbJ,EAAgBtZ,KAAK4Y,iBAAiBc,GACtC1Z,KAAK4Y,iBAAiBe,MACtB3Z,KAAK+Y,qBAAqBO,GAC1BtZ,KAAK4Z,qBAAqBN,GAIhC,OAAOC,GAGD3B,EAAAhY,UAAAwY,SAAR,SAAiBrC,EAAqDX,GACpE,QAAKpV,KAAK0H,SAASC,SAASlC,eAAeG,QAG3C5F,KAAK6Z,gBAAgB9D,GACrBA,EAAoB1I,MAAM3E,EAAI0M,EAAa/H,MAAM3E,EAAI0M,EAAa/H,MAAMlB,KACpEnM,KAAKwS,KAAKuD,EAAqB/V,KAAKwY,YACtCzC,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,IACV,IAEP/V,KAAK+Y,qBAAqBhD,IAErB,KAGD6B,EAAAhY,UAAAyY,SAAR,SAAiBtC,EAAqDX,GACpE,QAAKpV,KAAK0H,SAASC,SAASlC,eAAeC,QAG3C1F,KAAK6Z,gBAAgB9D,GACrBA,EAAoB1I,MAAM3E,EAAI0M,EAAa/H,MAAM3E,EAAIqN,EAAoB1I,MAAMlB,KAC3EnM,KAAKwS,KAAKuD,EAAqB/V,KAAKyY,YACtC1C,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,IACV,IAEP/V,KAAK+Y,qBAAqBhD,IAErB,KAGD6B,EAAAhY,UAAA0Y,QAAR,SAAgBvC,EAAqDX,GACnE,QAAKpV,KAAK0H,SAASC,SAASlC,eAAeE,OAG3C3F,KAAK6Z,gBAAgB9D,GACrBA,EAAoB1I,MAAM1E,EAAIyM,EAAa/H,MAAM1E,EAAIyM,EAAa/H,MAAMnB,KACpElM,KAAKwS,KAAKuD,EAAqB/V,KAAKuY,WACtCxC,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,IACV,IAEP/V,KAAK+Y,qBAAqBhD,IAErB,KAGD6B,EAAAhY,UAAAuY,QAAR,SAAgBpC,EAAqDX,GACnE,QAAKpV,KAAK0H,SAASC,SAASlC,eAAeI,OAG3C7F,KAAK6Z,gBAAgB9D,GACrBA,EAAoB1I,MAAM1E,EAAIyM,EAAa/H,MAAM1E,EAAIoN,EAAoB1I,MAAMnB,KAC3ElM,KAAKwS,KAAKuD,EAAqB/V,KAAKkY,WACtCnC,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,IACV,IAEP/V,KAAK+Y,qBAAqBhD,IAErB,KAGD6B,EAAAhY,UAAAia,gBAAR,SAAwBzE,OAClB7V,EAAIS,KAAK8X,gBAAgBzP,QAAQ+M,IAC1B,IAAP7V,IACFA,EAAIS,KAAK8X,gBAAgBtF,KAAK4C,GAAgB,EAC9CpV,KAAK+X,oBAAoBxY,GAAK,IAEhCS,KAAK+X,oBAAoBxY,GAAGiT,KAAK,CAAC7J,EAAGyM,EAAa/H,MAAM1E,EAAGD,EAAG0M,EAAa/H,MAAM3E,KAG3EkP,EAAAhY,UAAAmZ,qBAAR,SAA6B3D,OACrB7V,EAAIS,KAAK8X,gBAAgBzP,QAAQ+M,GACjC2E,EAAe/Z,KAAK+X,oBAAoBxY,GAAGoa,MAC5CI,IAGL3E,EAAa/H,MAAM1E,EAAIoR,EAAapR,EACpCyM,EAAa/H,MAAM3E,EAAIqR,EAAarR,EACpC0M,EAAapD,UACRhS,KAAK+X,oBAAoBxY,GAAGG,SAC/BM,KAAK8X,gBAAgBpF,OAAOnT,EAAG,GAC/BS,KAAK+X,oBAAoBrF,OAAOnT,EAAG,MAI/BqY,EAAAhY,UAAAka,YAAR,SAAoB1E,GAClB,GAAIpV,KAAK6X,YAAYxP,QAAQ+M,GAAgB,EAC3CpV,KAAK6X,YAAYrF,KAAK4C,GACtBpV,KAAKgY,gBAAgBxF,KAAK,CAAC,CAAC7J,EAAGyM,EAAa5K,KAAK7B,GAAK,EAAGD,EAAG0M,EAAa5K,KAAK9B,GAAK,GACjF,CAACC,EAAGyM,EAAa/H,MAAM1E,EAAGD,EAAG0M,EAAa/H,MAAM3E,SAC7C,KACCnJ,EAAIS,KAAK6X,YAAYxP,QAAQ+M,GACnCpV,KAAKgY,gBAAgBzY,GAAGiT,KAAK,CAAC7J,EAAGyM,EAAa/H,MAAM1E,EAAGD,EAAG0M,EAAa/H,MAAM3E,MAIzEkP,EAAAhY,UAAAoa,iBAAR,SAAyBza,GACnBA,GAAK,IACPS,KAAK6X,YAAYnF,OAAOnT,EAAG,GAC3BS,KAAKgY,gBAAgBtF,OAAOnT,EAAG,KAI3BqY,EAAAhY,UAAAga,qBAAR,SAA6BxE,OACrB7V,EAAIS,KAAK6X,YAAYxP,QAAQ+M,GAC/B7V,GAAK,IACPS,KAAKgY,gBAAgBzY,GAAGoa,MACnB3Z,KAAKgY,gBAAgBtY,SACxBM,KAAK6X,YAAYnF,OAAOnT,EAAG,GAC3BS,KAAKgY,gBAAgBtF,OAAOnT,EAAG,MAK7BqY,EAAAhY,UAAAyZ,gBAAR,SAAwBJ,EAA4C1Z,GAKlE,QAFI0a,EAActR,EAAGD,EAFfwR,EAAOla,KAAKgY,gBAAgBzY,GAC9Bma,EAAIQ,EAAKxa,OAAS,EAElB0Z,GAAS,EACNM,GAAK,EAAGA,IACbO,EAAeC,EAAKR,GACpB/Q,EAAIsQ,EAAW5L,MAAM1E,EACrBD,EAAIuQ,EAAW5L,MAAM3E,EACrBuQ,EAAW5L,MAAM1E,EAAIsR,EAAatR,EAClCsQ,EAAW5L,MAAM3E,EAAIuR,EAAavR,EAC7B1I,KAAK0H,SAASoL,iBAAiBmG,EAAW5L,QAK7C4L,EAAW5L,MAAM1E,EAAIA,EACrBsQ,EAAW5L,MAAM3E,EAAIA,IALrBuQ,EAAWjH,UACXkI,EAAKxH,OAAOgH,EAAI,EAAGQ,EAAKxa,OAASga,EAAI,GACrCN,GAAS,GASb,OAHIc,EAAKxa,OAAS,GAChBM,KAAKga,iBAAiBza,GAEjB6Z,uBAnTVxQ,EAAAA,sDAHOwN,KAwTRwB,EA1TA,GCAAuC,EAAA,WAgDE,SAAAA,EAAY/E,EAA8C1N,EAA8CuC,GAAAjK,KAAAiK,KAAAA,EAFxGjK,KAAA2S,WAAsD,EAGpD3S,KAAKoV,aAAeA,EACpBpV,KAAK0H,SAAWA,EAChB1H,KAAKuW,UAAY,CACflP,QAAS,EACTE,QAAS,GAEXvH,KAAKka,KAAO,GAqQhB,OAlQEC,EAAAva,UAAAkJ,QAAA,WACM9I,KAAK0H,SAASuB,cAChBjJ,KAAK0H,SAASuB,cAAa,UAEtBjJ,KAAKoV,oBACLpV,KAAK0H,gBACL1H,KAAK2S,UACR3S,KAAKoa,YACPpa,KAAKoa,YACLpa,KAAKqa,eAITF,EAAAva,UAAA0a,UAAA,SAAUvV,GAAV,IAAAqE,EAAApJ,KACE,OAAQ+E,EAAEwV,OACR,KAAK,EAEH,MACF,KAAK,EACL,KAAK,EAEH,OAGAva,KAAK0H,SAAS4B,QAAQnF,WAAanE,KAAK0H,SAAS4B,QAAQnF,UAAUO,OACrE1E,KAAK0H,SAAS4B,QAAQnF,UAAUO,MAAM1E,KAAKoV,aAAa5K,KAAMxK,KAAKoV,aAAcrQ,GAGnFA,EAAE8F,kBACF9F,EAAE6F,iBACF5K,KAAKwa,aAAexa,KAAKya,SAAS9Q,KAAK3J,MACvCA,KAAK0a,iBAAmB1a,KAAK2a,SAAShR,KAAK3J,MAE3CA,KAAKiK,KAAKC,kBAAiB,WACzBd,EAAKwR,UAAYxR,EAAKgM,aAAa7L,SAASC,OAAO,WAAY,YAAaJ,EAAKoR,cACjFpR,EAAKyR,UAAYzR,EAAK1B,SAAS6B,SAASC,OAAOJ,EAAK1B,SAAS+B,GAAI,YAAaL,EAAKoR,gBAErFxa,KAAK8a,QAAU9a,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,UAAWxJ,KAAK0a,kBAC7E1a,KAAK+a,WAAa/a,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,aAAcxJ,KAAK0a,kBACnF1a,KAAKgb,aAAehb,KAAKoV,aAAa7L,SAASC,OAAO,SAAU,OAAQxJ,KAAK0a,kBAC7E1a,KAAKib,SAAWjb,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,WAAYxJ,KAAK0a,kBAC/E1a,KAAKkb,YAAclb,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,cAAexJ,KAAK0a,kBACrF1a,KAAKoV,aAAa7L,SAASiF,SAASxO,KAAKoV,aAAa3L,GAAI,wBAC1DzJ,KAAKwC,OAASxC,KAAK0H,SAASC,SAASnF,OACrCxC,KAAK0W,WAAa1W,KAAK0H,SAAS+B,GAAGiC,WAAa1L,KAAK0H,SAAS+B,GAAGiN,WACjE1W,KAAK2W,UAAY3W,KAAK0H,SAAS+B,GAAGmC,UAAY5L,KAAK0H,SAAS+B,GAAGkN,UAC/D3W,KAAK2L,KAAO3L,KAAKoV,aAAazJ,KAAO3L,KAAKwC,OAC1CxC,KAAK6L,IAAM7L,KAAKoV,aAAavJ,IAAM7L,KAAKwC,OACxCxC,KAAKiO,MAAQjO,KAAKoV,aAAanH,MAC/BjO,KAAKkO,OAASlO,KAAKoV,aAAalH,OAChClO,KAAKmb,SAAWpW,EAAEsC,QAAUrH,KAAK0W,WAAa1W,KAAKwC,OAASxC,KAAK2L,KACjE3L,KAAKob,QAAUrW,EAAEwC,QAAUvH,KAAK2W,UAAY3W,KAAKwC,OAASxC,KAAK6L,IAC/D7L,KAAK0H,SAASsB,WAAahJ,KAAKoV,aAAa/H,MAC7CrN,KAAK0H,SAASuB,cAAa,GAC3BjJ,KAAKwS,KAAO,IAAIoF,EAAa5X,KAAKoV,cAClCpV,KAAKqF,KAAO,IAAI8P,EAAanV,KAAKoV,cAClCpV,KAAK0H,SAASqI,gBAAiB,EAC/B/P,KAAK0H,SAASqK,aACd/R,KAAKka,KAAK1H,KAAK,CAAC7J,EAAG3I,KAAKoV,aAAa5K,KAAK7B,GAAK,EAAGD,EAAG1I,KAAKoV,aAAa5K,KAAK9B,GAAK,KAGnFyR,EAAAva,UAAA6a,SAAA,SAAS1V,GACPA,EAAE8F,kBACF9F,EAAE6F,iBACFrE,EAAca,gBAAgBrC,GAC9B/E,KAAK0W,WAAa1W,KAAK0H,SAAS+B,GAAGiC,WAAa1L,KAAK0H,SAAS+B,GAAGiN,WACjE1W,KAAK2W,UAAY3W,KAAK0H,SAAS+B,GAAGmC,UAAY5L,KAAK0H,SAAS+B,GAAGkN,UAC/DL,EAAOtW,KAAK0H,SAAU1H,KAAK2L,KAAM3L,KAAK6L,IAAK7L,KAAKiO,MAAOjO,KAAKkO,OAAQnJ,EAAG/E,KAAKuW,UAC1EvW,KAAKqb,uCAAuC1R,KAAK3J,OAEnDA,KAAKqb,uCAAuCtW,IAG9CoV,EAAAva,UAAAyb,uCAAA,SAAuCtW,GAAvC,IAAAqE,EAAApJ,KACEA,KAAK2L,KAAO5G,EAAEsC,QAAUrH,KAAK0W,WAAa1W,KAAKmb,SAC/Cnb,KAAK6L,IAAM9G,EAAEwC,QAAUvH,KAAK2W,UAAY3W,KAAKob,QAC7Cpb,KAAKwW,wBACLxW,KAAKuW,UAAUlP,QAAUtC,EAAEsC,QAC3BrH,KAAKuW,UAAUhP,QAAUxC,EAAEwC,QAC3BvH,KAAKiK,KAAKqR,IAAG,WACXlS,EAAK1B,SAASqK,gBAIlBoI,EAAAva,UAAA+a,SAAA,SAAS5V,GAAT,IAAAqE,EAAApJ,KACE+E,EAAE8F,kBACF9F,EAAE6F,iBAEF8M,IACA1X,KAAKgb,eACLhb,KAAK4a,YACL5a,KAAK8a,UACL9a,KAAK+a,aACL/a,KAAK6a,YACL7a,KAAKib,WACLjb,KAAKkb,cACLlb,KAAKoV,aAAa7L,SAASqF,YAAY5O,KAAKoV,aAAa3L,GAAI,wBAC7DzJ,KAAK0H,SAASqI,gBAAiB,EAC/B/P,KAAK0H,SAASqK,aACd/R,KAAKka,KAAO,GACRla,KAAK0H,SAAS4B,QAAQnF,WAAanE,KAAK0H,SAAS4B,QAAQnF,UAAUM,KACrE8W,QAAQC,QAAQxb,KAAK0H,SAAS4B,QAAQnF,UAAUM,KAAKzE,KAAKoV,aAAa5K,KAAMxK,KAAKoV,aAAcrQ,IAC7F0W,KAAKzb,KAAK0b,SAAS/R,KAAK3J,MAAOA,KAAK2b,WAAWhS,KAAK3J,OAEvDA,KAAK0b,WAEPvU,WAAU,WACJiC,EAAK1B,WACP0B,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,cAAa,OAKjCkR,EAAAva,UAAA+b,WAAA,WACE3b,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAKoV,aAAa5K,KAAK7B,GAAK,EACxD3I,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAKoV,aAAa5K,KAAK9B,GAAK,EACxD1I,KAAKoV,aAAapD,UACdhS,KAAKwS,MACPxS,KAAKwS,KAAKwG,eAERhZ,KAAKqF,MACPrF,KAAKqF,KAAKoQ,kBAERzV,KAAKwS,OACPxS,KAAKwS,KAAK1J,iBACH9I,KAAKwS,MAEVxS,KAAKqF,OACPrF,KAAKqF,KAAKyD,iBACH9I,KAAKqF,OAIhB8U,EAAAva,UAAA8b,SAAA,WACM1b,KAAK0H,SAASC,SAASxD,UAAUQ,eAAiB3E,KAAK0H,SAAS4B,QAAQnF,WACvEnE,KAAK0H,SAAS4B,QAAQnF,UAAUS,uBAChC5E,KAAK2S,YAAgC,IAAnB3S,KAAK2S,WAAsB3S,KAAK2S,UAAUtF,OAC/DrN,KAAK0H,SAAS4B,QAAQnF,UAAUS,sBAAsB5E,KAAKoV,aAAa5K,KAAMxK,KAAK2S,UAAUnI,KAAMxK,KAAK0H,UAE1G1H,KAAK2S,WAAY,EACjB3S,KAAKoV,aAAapD,UAClBhS,KAAKoV,aAAaO,iBAAiB3V,KAAKoV,aAAa/H,MAAOrN,KAAKoV,aAAa5K,MAC1ExK,KAAKwS,MACPxS,KAAKwS,KAAK0G,iBAERlZ,KAAKqF,MACPrF,KAAKqF,KAAKqQ,cAER1V,KAAKwS,OACPxS,KAAKwS,KAAK1J,iBACH9I,KAAKwS,MAEVxS,KAAKqF,OACPrF,KAAKqF,KAAKyD,iBACH9I,KAAKqF,OAIhB8U,EAAAva,UAAA4W,sBAAA,WAgBE,GAfAxW,KAAK0H,SAASsB,WAAahJ,KAAKoV,aAAa/H,MAC7CrN,KAAK4b,UAAY5b,KAAK0H,SAASoE,kBAAkB9L,KAAK2L,KAAMI,KAAK+B,OACjE9N,KAAK6b,UAAY7b,KAAK0H,SAASuE,kBAAkBjM,KAAK6L,IAAKE,KAAK+B,OAChE9N,KAAK8b,gBAAkB9b,KAAKoV,aAAa/H,MAAM1E,EAC/C3I,KAAK+b,gBAAkB/b,KAAKoV,aAAa/H,MAAM3E,EAC/C1I,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAK4b,UAC7B5b,KAAK0H,SAASkL,mBAAmB5S,KAAKoV,aAAa/H,SACrDrN,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAK8b,iBAEnC9b,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAK6b,UAC7B7b,KAAK0H,SAASkL,mBAAmB5S,KAAKoV,aAAa/H,SACrDrN,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAK+b,iBAEnC/b,KAAK0H,SAASwI,aAAa/B,gBAAgBnO,KAAKoV,aAAa7L,SAAUvJ,KAAKoV,aAAa3L,GAAIzJ,KAAK2L,KAAM3L,KAAK6L,KAEzG7L,KAAK8b,kBAAoB9b,KAAKoV,aAAa/H,MAAM1E,GAAK3I,KAAK+b,kBAAoB/b,KAAKoV,aAAa/H,MAAM3E,EAAG,KACtGuR,EAAeja,KAAKka,KAAKla,KAAKka,KAAKxa,OAAS,GAC9CgZ,EAAY,GACZuB,EAAatR,EAAI3I,KAAKoV,aAAa/H,MAAM1E,EAC3C+P,EAAY1Y,KAAKwS,KAAK+F,SACb0B,EAAatR,EAAI3I,KAAKoV,aAAa/H,MAAM1E,EAClD+P,EAAY1Y,KAAKwS,KAAK0F,SACb+B,EAAavR,EAAI1I,KAAKoV,aAAa/H,MAAM3E,EAClDgQ,EAAY1Y,KAAKwS,KAAKgG,UACbyB,EAAavR,EAAI1I,KAAKoV,aAAa/H,MAAM3E,IAClDgQ,EAAY1Y,KAAKwS,KAAKiG,WAExBzY,KAAKwS,KAAKlN,UAAUoT,EAAW1Y,KAAK0H,SAASC,SAASpC,mBACtDvF,KAAKqF,KAAKiQ,YACVtV,KAAK2S,UAAY3S,KAAK0H,SAAS4E,eAAetM,KAAKoV,aAAa/H,OAC5DrN,KAAK2S,WACP3S,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAK8b,gBACjC9b,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAK+b,gBAC7B/b,KAAK0H,SAASC,SAASxD,UAAUQ,gBAAoC,IAAnB3E,KAAK2S,WAAsB3S,KAAK2S,UAAUtF,QAC9FrN,KAAK0H,SAASsB,WAAa,OAG7BhJ,KAAKka,KAAK1H,KAAK,CAAC7J,EAAG3I,KAAKoV,aAAa/H,MAAM1E,EAAGD,EAAG1I,KAAKoV,aAAa/H,MAAM3E,IAE3E1I,KAAKwS,KAAK2G,gBAEZnZ,KAAK0H,SAASuB,cAAa,IAG7BkR,EAAAva,UAAAsS,OAAA,eACQ8J,EAAahc,KAAKoV,aAAaU,gBAChC9V,KAAKqE,SAAW2X,GACnBhc,KAAKqE,SAAWrE,KAAKqE,QACrBrE,KAAKic,kBAAoBjc,KAAKkc,eAAevS,KAAK3J,MAClDA,KAAKoa,UAAYpa,KAAKoV,aAAa7L,SAASC,OAAOxJ,KAAKoV,aAAa3L,GAAI,YAAazJ,KAAKic,mBAC3Fjc,KAAKqa,WAAara,KAAKoV,aAAa7L,SAASC,OAAOxJ,KAAKoV,aAAa3L,GAAI,aAAczJ,KAAKic,oBACpFjc,KAAKqE,UAAY2X,IAC1Bhc,KAAKqE,SAAWrE,KAAKqE,QACrBrE,KAAKoa,YACLpa,KAAKqa,eAITF,EAAAva,UAAAsc,eAAA,SAAenX,GAAf,IAAAqE,EAAApJ,KACE,KAAI+E,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,oCAAsC,GAG1H9B,EAAckB,0BAA0BzH,KAAK0H,SAAU3C,IAI3D,GADAwB,EAAca,gBAAgBrC,GACzB/E,KAAK0H,SAASC,SAASxD,UAAUC,eAIhC2C,EAAUI,WAAU,WACxBiC,EAAKkR,UAAUvV,GACf4W,KACC3b,KAAK0H,SAASC,SAASxD,UAAUC,YAC9B+X,EAAcnc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,UAAWmS,GACvES,EAAmBpc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,aAAcmS,GAC/EX,EAAehb,KAAKoV,aAAa7L,SAASC,OAAO,SAAU,OAAQmS,GACnEU,EAAkBrc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,YAItE,SAAoB8S,GAClB/V,EAAca,gBAAgBkV,IAC1BvQ,KAAKM,IAAIiQ,EAAUjV,QAAUtC,EAAEsC,SAAW,GAAK0E,KAAKM,IAAIiQ,EAAU/U,QAAUxC,EAAEwC,SAAW,IAC3FoU,MANEY,EAAiBvc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,WAAYmS,GAC3Ea,EAAoBxc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,cAAemS,QAZrF3b,KAAKsa,UAAUvV,GAqBjB,SAAS4W,IACPzU,aAAaH,GACbiU,IACAmB,IACAC,IACAC,IACAE,IACAC,0BAhTL5T,EAAAA,sDAHOwN,SACA7J,SAPY0I,EAAAA,UA4TpBkF,EA5TA,GCAAsC,EAAA,WAyBE,SAAAA,EAAYrH,GACVpV,KAAK6X,YAAc,GACnB7X,KAAKgY,gBAAkB,GACvBhY,KAAKoV,aAAeA,EACpBpV,KAAK0H,SAAW0N,EAAa1N,SAC7B1H,KAAKiY,WAAa,CAChBC,SAAUlY,KAAKmY,QACfI,SAAUvY,KAAKsY,QACfE,UAAWxY,KAAKoY,SAChBK,UAAWzY,KAAKqY,UAElBrY,KAAKyY,UAAY,YACjBzY,KAAKwY,UAAY,YACjBxY,KAAKkY,SAAW,WAChBlY,KAAKuY,SAAW,WA6MpB,OA1MEkE,EAAA7c,UAAAkJ,QAAA,kBACS9I,KAAK0H,gBACL1H,KAAKoV,cAGdqH,EAAA7c,UAAA0F,UAAA,SAAUoT,GACR,QAAI1Y,KAAK0H,SAASC,SAAS7B,iBAClB9F,KAAKwS,KAAKxS,KAAKoV,aAAcsD,IAMxC+D,EAAA7c,UAAAoZ,aAAA,WAIE,QADIC,EAFA1Z,EAAI,EACF4N,EAAYnN,KAAK6X,YAAYnY,OAE5BH,EAAI4N,EAAG5N,KACZ0Z,EAAajZ,KAAK6X,YAAYtY,IACnB8N,MAAM1E,EAAIsQ,EAAWzO,KAAK7B,GAAK,EAC1CsQ,EAAW5L,MAAM3E,EAAIuQ,EAAWzO,KAAK9B,GAAK,EAC1CuQ,EAAW5L,MAAMnB,KAAO+M,EAAWzO,KAAK0B,MAAQ,EAChD+M,EAAW5L,MAAMqP,IAAMzD,EAAWzO,KAAKkS,KAAO,EAC9CzD,EAAWjH,UAEbhS,KAAK6X,YAAc,GACnB7X,KAAKgY,gBAAkB,IAGzByE,EAAA7c,UAAAsZ,eAAA,WAIE,QADID,EAFA1Z,EAAI,EACF4N,EAAYnN,KAAK6X,YAAYnY,OAE5BH,EAAI4N,EAAG5N,KACZ0Z,EAAajZ,KAAK6X,YAAYtY,IACnBoW,iBAAiBsD,EAAW5L,MAAO4L,EAAWzO,MAE3DxK,KAAK6X,YAAc,GACnB7X,KAAKgY,gBAAkB,IAGzByE,EAAA7c,UAAAuZ,cAAA,WAGE,QAFI5Z,EAAYS,KAAK6X,YAAYnY,OAAS,EACtC0Z,GAAS,EACN7Z,GAAK,EAAGA,IACTS,KAAKqZ,gBAAgBrZ,KAAK6X,YAAYtY,GAAIA,KAC5C6Z,GAAS,GAGTA,GACFpZ,KAAKmZ,iBAIDsD,EAAA7c,UAAA4S,KAAR,SAAa4C,EAA8CsD,OACnD7C,EAA6B7V,KAAK0H,SAAS4E,eAAe8I,EAAa/H,OAC7E,GAAIwI,IAAmD,IAA1BA,GAC3BA,IAA0B7V,KAAKoV,cAAgBS,EAAsB8G,gBACrE,GAAI3c,KAAKiY,WAAWS,GAAW5Y,KAAKE,KAAM6V,EAAuBT,EAAcsD,GAC7E,OAAO,OAEJ,IAA8B,IAA1B7C,EACT,OAAO,EAET,OAAO,GAGD4G,EAAA7c,UAAAwY,SAAR,SAAiBrC,EAAqDX,EACrDsD,OACTkE,EAAU7G,EAAoB1I,MAAM3E,EACpCmU,EAAa9G,EAAoB1I,MAAMlB,KAG7C,OAFA4J,EAAoB1I,MAAM3E,EAAI0M,EAAa/H,MAAM3E,EAAI0M,EAAa/H,MAAMlB,KACxE4J,EAAoB1I,MAAMlB,KAAO0Q,EAAaD,EAAU7G,EAAoB1I,MAAM3E,EAC7E6G,EAAkBY,uBAAuB4F,EAAoB1I,MAAO+H,EAAa/H,QAChFrN,KAAK0H,SAASkL,mBAAmBmD,EAAoB1I,QAMzD0I,EAAoB1I,MAAM3E,EAAIkU,EAC9B7G,EAAoB1I,MAAMlB,KAAO0Q,GAE5B,IARL9G,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,GACjB/V,KAAKwS,KAAK4C,EAAcsD,IACjB,IAQH+D,EAAA7c,UAAAyY,SAAR,SAAiBtC,EAAqDX,EACrDsD,OACTmE,EAAa9G,EAAoB1I,MAAMlB,KAE7C,OADA4J,EAAoB1I,MAAMlB,KAAOiJ,EAAa/H,MAAM3E,EAAIqN,EAAoB1I,MAAM3E,EAC7E6G,EAAkBY,uBAAuB4F,EAAoB1I,MAAO+H,EAAa/H,QAChFrN,KAAK0H,SAASkL,mBAAmBmD,EAAoB1I,QAMzD0I,EAAoB1I,MAAMlB,KAAO0Q,GAE5B,IAPL9G,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,GACjB/V,KAAKwS,KAAK4C,EAAcsD,IACjB,IAOH+D,EAAA7c,UAAA0Y,QAAR,SAAgBvC,EAAqDX,EACrDsD,OACRoE,EAAU/G,EAAoB1I,MAAM1E,EACpCoU,EAAahH,EAAoB1I,MAAMnB,KAG7C,OAFA6J,EAAoB1I,MAAM1E,EAAIyM,EAAa/H,MAAM1E,EAAIyM,EAAa/H,MAAMnB,KACxE6J,EAAoB1I,MAAMnB,KAAO6Q,EAAaD,EAAU/G,EAAoB1I,MAAM1E,EAC7E4G,EAAkBY,uBAAuB4F,EAAoB1I,MAAO+H,EAAa/H,QAChFrN,KAAK0H,SAASkL,mBAAmBmD,EAAoB1I,QAMzD0I,EAAoB1I,MAAM1E,EAAImU,EAC9B/G,EAAoB1I,MAAMnB,KAAO6Q,GAE5B,IARLhH,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,GACjB/V,KAAKwS,KAAK4C,EAAcsD,IACjB,IAQH+D,EAAA7c,UAAAuY,QAAR,SAAgBpC,EAAqDX,EACrDsD,OACRqE,EAAahH,EAAoB1I,MAAMnB,KAE7C,OADA6J,EAAoB1I,MAAMnB,KAAOkJ,EAAa/H,MAAM1E,EAAIoN,EAAoB1I,MAAM1E,EAC7E4G,EAAkBY,uBAAuB4F,EAAoB1I,MAAO+H,EAAa/H,QAChFrN,KAAK0H,SAASkL,mBAAmBmD,EAAoB1I,QAMzD0I,EAAoB1I,MAAMnB,KAAO6Q,GAE5B,IAPLhH,EAAoB/D,UACpBhS,KAAK8Z,YAAY/D,GACjB/V,KAAKwS,KAAK4C,EAAcsD,IACjB,IAOH+D,EAAA7c,UAAAka,YAAR,SAAoB1E,GAClB,GAAIpV,KAAK6X,YAAYxP,QAAQ+M,GAAgB,EAC3CpV,KAAK6X,YAAYrF,KAAK4C,GACtBpV,KAAKgY,gBAAgBxF,KAAK,CACxB,CACE7J,EAAGyM,EAAa5K,KAAK7B,GAAK,EAC1BD,EAAG0M,EAAa5K,KAAK9B,GAAK,EAC1BwD,KAAMkJ,EAAa5K,KAAK0B,MAAQ,EAChCC,KAAMiJ,EAAa5K,KAAK2B,MAAQ,GAElC,CACExD,EAAGyM,EAAa/H,MAAM1E,EACtBD,EAAG0M,EAAa/H,MAAM3E,EACtBwD,KAAMkJ,EAAa/H,MAAMnB,KACzBC,KAAMiJ,EAAa/H,MAAMlB,YAExB,KACC5M,EAAIS,KAAK6X,YAAYxP,QAAQ+M,GACnCpV,KAAKgY,gBAAgBzY,GAAGiT,KACtB,CACE7J,EAAGyM,EAAa/H,MAAM1E,EACtBD,EAAG0M,EAAa/H,MAAM3E,EACtBwD,KAAMkJ,EAAa/H,MAAMnB,KACzBC,KAAMiJ,EAAa/H,MAAMlB,SAKzBsQ,EAAA7c,UAAAoa,iBAAR,SAAyBza,GACnBA,GAAK,IACPS,KAAK6X,YAAYnF,OAAOnT,EAAG,GAC3BS,KAAKgY,gBAAgBtF,OAAOnT,EAAG,KAI3Bkd,EAAA7c,UAAAyZ,gBAAR,SAAwBJ,EAA4C1Z,GAIlE,QADI0a,EAAoEtR,EAAGD,EAAGwD,EAAMC,EAF9E+N,EAAOla,KAAKgY,gBAAgBzY,GAC9Bma,EAAIQ,EAAKxa,OAAS,EAEfga,GAAK,EAAGA,IACbO,EAAeC,EAAKR,GACpB/Q,EAAIsQ,EAAW5L,MAAM1E,EACrBD,EAAIuQ,EAAW5L,MAAM3E,EACrBwD,EAAO+M,EAAW5L,MAAMnB,KACxBC,EAAO8M,EAAW5L,MAAMlB,KACxB8M,EAAW5L,MAAM1E,EAAIsR,EAAatR,EAClCsQ,EAAW5L,MAAM3E,EAAIuR,EAAavR,EAClCuQ,EAAW5L,MAAMnB,KAAO+N,EAAa/N,KACrC+M,EAAW5L,MAAMlB,KAAO8N,EAAa9N,KAChCnM,KAAK0H,SAASoL,iBAAiBmG,EAAW5L,QAI7C4L,EAAW5L,MAAM1E,EAAIA,EACrBsQ,EAAW5L,MAAM3E,EAAIA,EACrBuQ,EAAW5L,MAAMnB,KAAOA,EACxB+M,EAAW5L,MAAMlB,KAAOA,IANxB8M,EAAWjH,UACXkI,EAAKxH,OAAOgH,EAAI,EAAGQ,EAAKxa,OAAS,EAAIga,IAQzC,OAAIQ,EAAKxa,OAAS,IAChBM,KAAKga,iBAAiBza,IACf,wBAzOZqJ,EAAAA,sDAJOwN,KAiPRqG,EApPA,GCAAO,EAAA,WAkDE,SAAAA,EAAY5H,EAA8C1N,EAA8CuC,GAAAjK,KAAAiK,KAAAA,EACtGjK,KAAKoV,aAAeA,EACpBpV,KAAK0H,SAAWA,EAChB1H,KAAKuW,UAAY,CACflP,QAAS,EACTE,QAAS,GAEXvH,KAAKid,WAAa,CAAC,EAAG,EAAG,EAAG,GAC5Bjd,KAAKyW,sBAAwB,CAACzR,GAAG,EAAOD,GAAG,EAAOvF,GAAG,EAAOF,GAAG,GAgWnE,OA7VE0d,EAAApd,UAAAkJ,QAAA,WACM9I,KAAK0H,SAASuB,cAChBjJ,KAAK0H,SAASuB,sBAETjJ,KAAKoV,oBACLpV,KAAK0H,UAGdsV,EAAApd,UAAA0a,UAAA,SAAUvV,GAAV,IAAAqE,EAAApJ,KACE,OAAQ+E,EAAEwV,OACR,KAAK,EAEH,MACF,KAAK,EACL,KAAK,EAEH,OAEAva,KAAK0H,SAAS4B,QAAQzE,WAAa7E,KAAK0H,SAAS4B,QAAQzE,UAAUH,OACrE1E,KAAK0H,SAAS4B,QAAQzE,UAAUH,MAAM1E,KAAKoV,aAAa5K,KAAMxK,KAAKoV,aAAcrQ,GAEnFA,EAAE8F,kBACF9F,EAAE6F,iBACF5K,KAAKwa,aAAexa,KAAKya,SAAS9Q,KAAK3J,MACvCA,KAAK0a,iBAAmB1a,KAAK2a,SAAShR,KAAK3J,MAC3CA,KAAKiK,KAAKC,kBAAiB,WACzBd,EAAKwR,UAAYxR,EAAKgM,aAAa7L,SAASC,OAAO,WAAY,YAAaJ,EAAKoR,cACjFpR,EAAKyR,UAAYzR,EAAK1B,SAAS6B,SAASC,OAAOJ,EAAK1B,SAAS+B,GAAI,YAAaL,EAAKoR,gBAErFxa,KAAK8a,QAAU9a,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,UAAWxJ,KAAK0a,kBAC7E1a,KAAK+a,WAAa/a,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,aAAcxJ,KAAK0a,kBACnF1a,KAAKgb,aAAehb,KAAKoV,aAAa7L,SAASC,OAAO,SAAU,OAAQxJ,KAAK0a,kBAC7E1a,KAAKib,SAAWjb,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,WAAYxJ,KAAK0a,kBAC/E1a,KAAKkb,YAAclb,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,cAAexJ,KAAK0a,kBAErF1a,KAAKoV,aAAa7L,SAASiF,SAASxO,KAAKoV,aAAa3L,GAAI,0BAC1DzJ,KAAKuW,UAAUlP,QAAUtC,EAAEsC,QAC3BrH,KAAKuW,UAAUhP,QAAUxC,EAAEwC,QAC3BvH,KAAK2L,KAAO3L,KAAKoV,aAAazJ,KAC9B3L,KAAK6L,IAAM7L,KAAKoV,aAAavJ,IAC7B7L,KAAKiO,MAAQjO,KAAKoV,aAAanH,MAC/BjO,KAAKkO,OAASlO,KAAKoV,aAAalH,OAChClO,KAAKkd,OAASld,KAAKoV,aAAavJ,IAAM7L,KAAKoV,aAAalH,OACxDlO,KAAKmd,MAAQnd,KAAKoV,aAAazJ,KAAO3L,KAAKoV,aAAanH,MACxDjO,KAAKwC,OAASxC,KAAK0H,SAASC,SAASnF,OACrCxC,KAAK0W,WAAa1W,KAAK0H,SAAS+B,GAAGiC,WAAa1L,KAAK0H,SAAS+B,GAAGiN,WACjE1W,KAAK2W,UAAY3W,KAAK0H,SAAS+B,GAAGmC,UAAY5L,KAAK0H,SAAS+B,GAAGkN,UAC/D3W,KAAKmb,SAAWpW,EAAEsC,QAAUrH,KAAK0W,WAAa1W,KAAK2L,KACnD3L,KAAKod,UAAYrY,EAAEsC,QAAUrH,KAAK0W,WAAa1W,KAAKmd,MACpDnd,KAAKob,QAAUrW,EAAEwC,QAAUvH,KAAK2W,UAAY3W,KAAK6L,IACjD7L,KAAKqd,WAAatY,EAAEwC,QAAUvH,KAAK2W,UAAY3W,KAAKkd,OACpDld,KAAKsd,UAAYtd,KAAK0H,SAAS8M,kBAAkBxU,KAAKoV,aAAa/H,MAAMhL,aAAerC,KAAK0H,SAASC,SAAStF,aAC3GrC,KAAKwC,OACTxC,KAAKud,SAAWvd,KAAK0H,SAAS6M,kBAAkBvU,KAAKoV,aAAa/H,MAAMjL,aAAepC,KAAK0H,SAASC,SAASvF,aAC1GpC,KAAKwC,OACTxC,KAAK0H,SAASsB,WAAahJ,KAAKoV,aAAa/H,MAC7CrN,KAAK0H,SAASuB,eACdjJ,KAAKwS,KAAO,IAAIoF,EAAa5X,KAAKoV,cAClCpV,KAAKwd,WAAa,IAAIf,EAAmBzc,KAAKoV,cAC9CpV,KAAK0H,SAASqI,gBAAiB,EAC/B/P,KAAK0H,SAASqK,aAEVhN,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GACrGrI,KAAKyW,sBAAsBjX,GAAI,EAC/BQ,KAAKyd,kBAAoBzd,KAAK0d,SACrB3Y,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GAC5GrI,KAAKyW,sBAAsBzR,GAAI,EAC/BhF,KAAKyd,kBAAoBzd,KAAK2d,SACrB5Y,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GAC5GrI,KAAKyW,sBAAsBnX,GAAI,EAC/BU,KAAKyd,kBAAoBzd,KAAK4d,SACrB7Y,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAAe,GAC5GrI,KAAKyW,sBAAsB1R,GAAI,EAC/B/E,KAAKyd,kBAAoBzd,KAAK6d,SACrB9Y,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,GAC7GrI,KAAKyW,sBAAsBjX,GAAI,EAC/BQ,KAAKyW,sBAAsBzR,GAAI,EAC/BhF,KAAKyd,kBAAoBzd,KAAK8d,UACrB/Y,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,GAC7GrI,KAAKyW,sBAAsBjX,GAAI,EAC/BQ,KAAKyW,sBAAsB1R,GAAI,EAC/B/E,KAAKyd,kBAAoBzd,KAAK+d,UACrBhZ,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,GAC7GrI,KAAKyW,sBAAsBnX,GAAI,EAC/BU,KAAKyW,sBAAsBzR,GAAI,EAC/BhF,KAAKyd,kBAAoBzd,KAAKge,UACrBjZ,EAAE8C,OAAOK,aAAa,UAAYnD,EAAE8C,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAAgB,IAC7GrI,KAAKyW,sBAAsBnX,GAAI,EAC/BU,KAAKyW,sBAAsB1R,GAAI,EAC/B/E,KAAKyd,kBAAoBzd,KAAKie,WAIlCjB,EAAApd,UAAA6a,SAAA,SAAS1V,GAAT,IAAAqE,EAAApJ,KACE+E,EAAE8F,kBACF9F,EAAE6F,iBACFrE,EAAca,gBAAgBrC,GAC9B/E,KAAK2W,UAAY3W,KAAK0H,SAAS+B,GAAGmC,UAAY5L,KAAK0H,SAAS+B,GAAGkN,UAC/D3W,KAAK0W,WAAa1W,KAAK0H,SAAS+B,GAAGiC,WAAa1L,KAAK0H,SAAS+B,GAAGiN,WACjEJ,EAAOtW,KAAK0H,SAAU1H,KAAK2L,KAAM3L,KAAK6L,IAAK7L,KAAKiO,MAAOjO,KAAKkO,OAAQnJ,EAAG/E,KAAKuW,UAAWvW,KAAKyd,kBAAkB9T,KAAK3J,OAAO,EACxHA,KAAKyW,uBACPzW,KAAKyd,kBAAkB1Y,GAEvB/E,KAAKuW,UAAUlP,QAAUtC,EAAEsC,QAC3BrH,KAAKuW,UAAUhP,QAAUxC,EAAEwC,QAC3BvH,KAAKiK,KAAKqR,IAAG,WACXlS,EAAK1B,SAASqK,gBAIlBiL,EAAApd,UAAA+a,SAAA,SAAS5V,GAAT,IAAAqE,EAAApJ,KACE+E,EAAE8F,kBACF9F,EAAE6F,iBACF8M,IACA1X,KAAK4a,YACL5a,KAAK8a,UACL9a,KAAK+a,aACL/a,KAAKgb,eACLhb,KAAK6a,YACL7a,KAAKib,WACLjb,KAAKkb,cACLlb,KAAK0H,SAASqI,gBAAiB,EAC/B/P,KAAK0H,SAASqK,aACV/R,KAAK0H,SAAS4B,QAAQzE,WAAa7E,KAAK0H,SAAS4B,QAAQzE,UAAUJ,KACrE8W,QAAQC,QAAQxb,KAAK0H,SAAS4B,QAAQzE,UAAUJ,KAAKzE,KAAKoV,aAAa5K,KAAMxK,KAAKoV,aAAcrQ,IAC7F0W,KAAKzb,KAAKke,WAAWvU,KAAK3J,MAAOA,KAAKme,aAAaxU,KAAK3J,OAE3DA,KAAKke,aAEP/W,WAAU,WACRiC,EAAKgM,aAAa7L,SAASqF,YAAYxF,EAAKgM,aAAa3L,GAAI,0BACzDL,EAAK1B,WACP0B,EAAK1B,SAASsB,WAAa,KAC3BI,EAAK1B,SAASuB,mBAKpB+T,EAAApd,UAAAue,aAAA,WACEne,KAAKoV,aAAa/H,MAAMnB,KAAOlM,KAAKoV,aAAa5K,KAAK0B,MAAQ,EAC9DlM,KAAKoV,aAAa/H,MAAMlB,KAAOnM,KAAKoV,aAAa5K,KAAK2B,MAAQ,EAC9DnM,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAKoV,aAAa5K,KAAK7B,GAAK,EACxD3I,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAKoV,aAAa5K,KAAK9B,GAAK,EACxD1I,KAAKoV,aAAapD,UAClBhS,KAAKwS,KAAKwG,eACVhZ,KAAKwd,WAAWxE,eAChBhZ,KAAKwS,KAAK1J,iBACH9I,KAAKwS,KACZxS,KAAKwd,WAAW1U,iBACT9I,KAAKwd,YAGdR,EAAApd,UAAAse,WAAA,WACEle,KAAKoV,aAAapD,UAClBhS,KAAKoV,aAAaO,iBAAiB3V,KAAKoV,aAAa/H,MAAOrN,KAAKoV,aAAa5K,MAC9ExK,KAAKwS,KAAK0G,iBACVlZ,KAAKwd,WAAWtE,iBAChBlZ,KAAKwS,KAAK1J,iBACH9I,KAAKwS,KACZxS,KAAKwd,WAAW1U,iBACT9I,KAAKwd,YAGdR,EAAApd,UAAA8d,QAAA,SAAQ3Y,GAQN,GAPA/E,KAAK6L,IAAM9G,EAAEwC,QAAUvH,KAAK2W,UAAY3W,KAAKob,QAC7Cpb,KAAKkO,OAASlO,KAAKkd,OAASld,KAAK6L,IAC7B7L,KAAKsd,UAAYtd,KAAKkO,SACxBlO,KAAKkO,OAASlO,KAAKsd,UACnBtd,KAAK6L,IAAM7L,KAAKkd,OAASld,KAAKsd,WAEhCtd,KAAKoe,YAAcpe,KAAK0H,SAASuE,kBAAkBjM,KAAK6L,IAAM7L,KAAKwC,OAAQuJ,KAAKC,OAC5EhM,KAAKoV,aAAa/H,MAAM3E,IAAM1I,KAAKoe,YAAa,CAOlD,GANApe,KAAKid,WAAW,GAAKjd,KAAKoV,aAAa/H,MAAM3E,EAC7C1I,KAAKid,WAAW,GAAKjd,KAAKoV,aAAa/H,MAAMlB,KAC7CnM,KAAKoV,aAAa/H,MAAMlB,MAAQnM,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAKoe,YACjEpe,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAKoe,YACjCpe,KAAKwd,WAAWlY,UAAUtF,KAAKwd,WAAW/E,WAC1CzY,KAAKwS,KAAKlN,UAAUtF,KAAKwS,KAAKiG,UAAWzY,KAAK0H,SAASC,SAASnC,qBAC5DxF,KAAK0H,SAAS4E,eAAetM,KAAKoV,aAAa/H,OAKjD,OAJArN,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAKid,WAAW,GAC5Cjd,KAAKoV,aAAa/H,MAAMlB,KAAOnM,KAAKid,WAAW,GAC/Cjd,KAAKqe,WAAWre,KAAK0H,SAAS8M,kBAAkBxU,KAAKoV,aAAa/H,MAAM3E,SACxE1I,KAAKse,cAActe,KAAK0H,SAAS8M,kBAAkBxU,KAAKoV,aAAa/H,MAAMlB,MAAQnM,KAAKwC,QAGxFxC,KAAK0H,SAASuB,eAEhBjJ,KAAKwd,WAAWrE,gBAChBnZ,KAAKwS,KAAK2G,gBAEZnZ,KAAKqe,WAAWre,KAAK6L,KACrB7L,KAAKse,cAActe,KAAKkO,SAG1B8O,EAAApd,UAAA+d,QAAA,SAAQ5Y,GAQN,GAPA/E,KAAK2L,KAAO5G,EAAEsC,QAAUrH,KAAK0W,WAAa1W,KAAKmb,SAC/Cnb,KAAKiO,MAAQjO,KAAKmd,MAAQnd,KAAK2L,KAC3B3L,KAAKud,SAAWvd,KAAKiO,QACvBjO,KAAKiO,MAAQjO,KAAKud,SAClBvd,KAAK2L,KAAO3L,KAAKmd,MAAQnd,KAAKud,UAEhCvd,KAAKoe,YAAcpe,KAAK0H,SAASoE,kBAAkB9L,KAAK2L,KAAO3L,KAAKwC,OAAQuJ,KAAKC,OAC7EhM,KAAKoV,aAAa/H,MAAM1E,IAAM3I,KAAKoe,YAAa,CAOlD,GANApe,KAAKid,WAAW,GAAKjd,KAAKoV,aAAa/H,MAAM1E,EAC7C3I,KAAKid,WAAW,GAAKjd,KAAKoV,aAAa/H,MAAMnB,KAC7ClM,KAAKoV,aAAa/H,MAAMnB,MAAQlM,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAKoe,YACjEpe,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAKoe,YACjCpe,KAAKwd,WAAWlY,UAAUtF,KAAKwd,WAAWtF,UAC1ClY,KAAKwS,KAAKlN,UAAUtF,KAAKwS,KAAK0F,SAAUlY,KAAK0H,SAASC,SAASnC,qBAC3DxF,KAAK0H,SAAS4E,eAAetM,KAAKoV,aAAa/H,OAKjD,OAJArN,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAKid,WAAW,GAC5Cjd,KAAKoV,aAAa/H,MAAMnB,KAAOlM,KAAKid,WAAW,GAC/Cjd,KAAKue,YAAYve,KAAK0H,SAAS6M,kBAAkBvU,KAAKoV,aAAa/H,MAAM1E,SACzE3I,KAAKwe,aAAaxe,KAAK0H,SAAS6M,kBAAkBvU,KAAKoV,aAAa/H,MAAMnB,MAAQlM,KAAKwC,QAGvFxC,KAAK0H,SAASuB,eAEhBjJ,KAAKwd,WAAWrE,gBAChBnZ,KAAKwS,KAAK2G,gBAEZnZ,KAAKue,YAAYve,KAAK2L,MACtB3L,KAAKwe,aAAaxe,KAAKiO,QAGzB+O,EAAApd,UAAAge,QAAA,SAAQ7Y,GAON,GANA/E,KAAKkO,OAASnJ,EAAEwC,QAAUvH,KAAK2W,UAAY3W,KAAKqd,WAAard,KAAK6L,IAC9D7L,KAAKsd,UAAYtd,KAAKkO,SACxBlO,KAAKkO,OAASlO,KAAKsd,WAErBtd,KAAKkd,OAASld,KAAK6L,IAAM7L,KAAKkO,OAC9BlO,KAAKoe,YAAcpe,KAAK0H,SAASuE,kBAAkBjM,KAAKkd,OAAQnR,KAAK0S,MAChEze,KAAKoV,aAAa/H,MAAM3E,EAAI1I,KAAKoV,aAAa/H,MAAMlB,OAAUnM,KAAKoe,YAAa,CAKnF,GAJApe,KAAKid,WAAW,GAAKjd,KAAKoV,aAAa/H,MAAMlB,KAC7CnM,KAAKoV,aAAa/H,MAAMlB,KAAOnM,KAAKoe,YAAcpe,KAAKoV,aAAa/H,MAAM3E,EAC1E1I,KAAKwd,WAAWlY,UAAUtF,KAAKwd,WAAWhF,WAC1CxY,KAAKwS,KAAKlN,UAAUtF,KAAKwS,KAAKgG,UAAWxY,KAAK0H,SAASC,SAASnC,qBAC5DxF,KAAK0H,SAAS4E,eAAetM,KAAKoV,aAAa/H,OAGjD,OAFArN,KAAKoV,aAAa/H,MAAMlB,KAAOnM,KAAKid,WAAW,QAC/Cjd,KAAKse,cAActe,KAAK0H,SAAS8M,kBAAkBxU,KAAKoV,aAAa/H,MAAMlB,MAAQnM,KAAKwC,QAGxFxC,KAAK0H,SAASuB,eAEhBjJ,KAAKwd,WAAWrE,gBAChBnZ,KAAKwS,KAAK2G,gBAEZnZ,KAAKse,cAActe,KAAKkO,SAG1B8O,EAAApd,UAAAie,QAAA,SAAQ9Y,GAON,GANA/E,KAAKiO,MAAQlJ,EAAEsC,QAAUrH,KAAK0W,WAAa1W,KAAKod,UAAYpd,KAAK2L,KAC7D3L,KAAKud,SAAWvd,KAAKiO,QACvBjO,KAAKiO,MAAQjO,KAAKud,UAEpBvd,KAAKmd,MAAQnd,KAAK2L,KAAO3L,KAAKiO,MAC9BjO,KAAKoe,YAAcpe,KAAK0H,SAASoE,kBAAkB9L,KAAKmd,MAAOpR,KAAK0S,MAC/Dze,KAAKoV,aAAa/H,MAAM1E,EAAI3I,KAAKoV,aAAa/H,MAAMnB,OAAUlM,KAAKoe,YAAa,CAKnF,GAJApe,KAAKid,WAAW,GAAKjd,KAAKoV,aAAa/H,MAAMnB,KAC7ClM,KAAKoV,aAAa/H,MAAMnB,KAAOlM,KAAKoe,YAAcpe,KAAKoV,aAAa/H,MAAM1E,EAC1E3I,KAAKwd,WAAWlY,UAAUtF,KAAKwd,WAAWjF,UAC1CvY,KAAKwS,KAAKlN,UAAUtF,KAAKwS,KAAK+F,SAAUvY,KAAK0H,SAASC,SAASnC,qBAC3DxF,KAAK0H,SAAS4E,eAAetM,KAAKoV,aAAa/H,OAGjD,OAFArN,KAAKoV,aAAa/H,MAAMnB,KAAOlM,KAAKid,WAAW,QAC/Cjd,KAAKwe,aAAaxe,KAAK0H,SAAS6M,kBAAkBvU,KAAKoV,aAAa/H,MAAMnB,MAAQlM,KAAKwC,QAGvFxC,KAAK0H,SAASuB,eAEhBjJ,KAAKwd,WAAWrE,gBAChBnZ,KAAKwS,KAAK2G,gBAEZnZ,KAAKwe,aAAaxe,KAAKiO,QAGzB+O,EAAApd,UAAAke,SAAA,SAAS/Y,GACP/E,KAAK0d,QAAQ3Y,GACb/E,KAAK2d,QAAQ5Y,IAGfiY,EAAApd,UAAAme,SAAA,SAAShZ,GACP/E,KAAK0d,QAAQ3Y,GACb/E,KAAK6d,QAAQ9Y,IAGfiY,EAAApd,UAAAoe,SAAA,SAASjZ,GACP/E,KAAK4d,QAAQ7Y,GACb/E,KAAK2d,QAAQ5Y,IAGfiY,EAAApd,UAAAqe,SAAA,SAASlZ,GACP/E,KAAK4d,QAAQ7Y,GACb/E,KAAK6d,QAAQ9Y,IAGfiY,EAAApd,UAAAsS,OAAA,WACElS,KAAK0e,cAAgB1e,KAAKoV,aAAauH,gBAGzCK,EAAApd,UAAAsc,eAAA,SAAenX,GAAf,IAAAqE,EAAApJ,KAEE,GADAuG,EAAca,gBAAgBrC,GACzB/E,KAAK0H,SAASC,SAAS9C,UAAUT,eAIhC2C,EAAUI,WAAU,WACxBiC,EAAKkR,UAAUvV,GACf4W,KACC3b,KAAK0H,SAASC,SAAS9C,UAAUT,YAC9B+X,EAAcnc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,UAAWmS,GACvES,EAAmBpc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,aAAcmS,GAC/EX,EAAehb,KAAKoV,aAAa7L,SAASC,OAAO,SAAU,OAAQmS,GACnEU,EAAkBrc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,YAItE,SAAoB8S,GAClB/V,EAAca,gBAAgBkV,IAC1BvQ,KAAKM,IAAIiQ,EAAUjV,QAAUtC,EAAEsC,SAAW,GAAK0E,KAAKM,IAAIiQ,EAAU/U,QAAUxC,EAAEwC,SAAW,IAC3FoU,MANEY,EAAiBvc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,WAAYmS,GAC3Ea,EAAoBxc,KAAKoV,aAAa7L,SAASC,OAAO,WAAY,cAAemS,QAZrF3b,KAAKsa,UAAUvV,GAqBjB,SAAS4W,IACPzU,aAAaH,GACbiU,IACAmB,IACAC,IACAC,IACAE,IACAC,MAIJQ,EAAApd,UAAAye,WAAA,SAAWxS,GACT7L,KAAK0H,SAASwI,aAAa/B,gBAAgBnO,KAAKoV,aAAa7L,SAAUvJ,KAAKoV,aAAa3L,GAAIzJ,KAAK2L,KAAME,IAG1GmR,EAAApd,UAAA2e,YAAA,SAAY5S,GACV3L,KAAK0H,SAASwI,aAAa/B,gBAAgBnO,KAAKoV,aAAa7L,SAAUvJ,KAAKoV,aAAa3L,GAAIkC,EAAM3L,KAAK6L,MAG1GmR,EAAApd,UAAA0e,cAAA,SAAcpQ,GACZlO,KAAKoV,aAAa7L,SAASqE,SAAS5N,KAAKoV,aAAa3L,GAAI,SAAUyE,EAAS,OAG/E8O,EAAApd,UAAA4e,aAAA,SAAavQ,GACXjO,KAAKoV,aAAa7L,SAASqE,SAAS5N,KAAKoV,aAAa3L,GAAI,QAASwE,EAAQ,2BA9Y9ErF,EAAAA,sDAHOwN,SACA7J,SARY0I,EAAAA,UA0ZpB+H,EA1ZA,GCAA2B,EAAA,WA6BE,SAAAA,EAAYlV,EAAwB/B,EAAoC6B,EAA6BU,GAA7BjK,KAAAuJ,SAAAA,EAA6BvJ,KAAAiK,KAAAA,EACnGjK,KAAKyJ,GAAKA,EAAG+F,cACbxP,KAAKqN,MAAQ,CACXnB,MAAO,EACPC,MAAO,EACPxD,GAAI,EACJD,GAAI,GAEN1I,KAAK0H,SAAWA,EAChB1H,KAAKiS,KAAO,IAAIkI,EAAkBna,KAAM0H,EAAU1H,KAAKiK,MACvDjK,KAAK2Q,OAAS,IAAIqM,EAAkBhd,KAAM0H,EAAU1H,KAAKiK,MA0G7D,OAvGE0U,EAAA/e,UAAAyQ,SAAA,WACErQ,KAAKmJ,gBACLnJ,KAAK0H,SAASyK,QAAQnS,OAGxB2e,EAAA/e,UAAAuJ,cAAA,WACEnJ,KAAKqN,MAAQ9G,EAAcC,MAAMxG,KAAKqN,MAAOrN,KAAKwK,KAAM,CACtD0B,KAAMlJ,UACNmJ,KAAMnJ,UACN2F,EAAG3F,UACH0F,EAAG1F,UACH4b,YAAa5b,UACb0b,cAAe1b,UACfsK,eAAgBtK,UAChBb,YAAaa,UACbX,YAAaW,UACbd,YAAac,UACbZ,YAAaY,UACbT,YAAaS,UACbV,YAAaU,aAIjB2b,EAAA/e,UAAA2R,YAAA,WACEvR,KAAK0H,SAAS+K,WAAWzS,aAClBA,KAAK0H,SACZ1H,KAAKiS,KAAKnJ,iBACH9I,KAAKiS,KACZjS,KAAK2Q,OAAO7H,iBACL9I,KAAK2Q,QAGdgO,EAAA/e,UAAAoS,QAAA,WACEhS,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,UAAWzJ,KAAK2R,UAAY,GAAK,SACjE3R,KAAK0H,SAASwI,aAAazC,WAAWzN,KAAKyJ,GAAIzJ,KAAKqN,MAAOrN,KAAKuJ,UAChEvJ,KAAK6e,kBAGPF,EAAA/e,UAAAif,eAAA,eACQhT,EAAM7L,KAAKqN,MAAM3E,EAAI1I,KAAK0H,SAASsG,aACnCrC,EAAO3L,KAAKqN,MAAM1E,EAAI3I,KAAK0H,SAASqG,YACpCE,EAAQjO,KAAKqN,MAAMnB,KAAOlM,KAAK0H,SAASqG,YAAc/N,KAAK0H,SAASC,SAASnF,OAC7E0L,EAASlO,KAAKqN,MAAMlB,KAAOnM,KAAK0H,SAASsG,aAAehO,KAAK0H,SAASC,SAASnF,QAEhFxC,KAAK8e,MAAQ7Q,EAAQ,GAAKC,EAAS,IACtClO,KAAK8e,MAAO,EACR9e,KAAKwK,KAAKzH,cACZ/C,KAAKwK,KAAKzH,aAAa/C,KAAKwK,KAAMxK,MAEhCA,KAAK0H,SAAS4B,QAAQjG,kBACxBrD,KAAK0H,SAAS4B,QAAQjG,iBAAiBrD,KAAKwK,KAAMxK,MAEhDA,KAAK0H,SAASC,SAASxB,kBACzBnG,KAAKyJ,GAAGsV,gBAAe,IAGvB9Q,IAAUjO,KAAKiO,OAASC,IAAWlO,KAAKkO,SAC1ClO,KAAKiO,MAAQA,EACbjO,KAAKkO,OAASA,EACVlO,KAAK0H,SAAS4B,QAAQlG,oBACxBpD,KAAK0H,SAAS4B,QAAQlG,mBAAmBpD,KAAKwK,KAAMxK,OAGxDA,KAAK6L,IAAMA,EACX7L,KAAK2L,KAAOA,GAGdgT,EAAA/e,UAAA2N,YAAA,WACMvN,KAAK0H,SAAS4B,QAAQnG,oBACxBnD,KAAK0H,SAAS4B,QAAQnG,mBAAmBnD,KAAKwK,KAAMxK,OAIxD2e,EAAA/e,UAAA+V,iBAAA,SAAiBqJ,EAAwBC,GACnCD,EAAS7S,OAAS8S,EAAS9S,MAAQ6S,EAAS9S,OAAS+S,EAAS/S,MAAQ8S,EAASrW,IAAMsW,EAAStW,GAAKqW,EAAStW,IAAMuW,EAASvW,IAG3H1I,KAAK0H,SAAS4E,eAAetM,KAAKqN,QACpCrN,KAAKqN,MAAM1E,EAAIsW,EAAStW,GAAK,EAC7B3I,KAAKqN,MAAM3E,EAAIuW,EAASvW,GAAK,EAC7B1I,KAAKqN,MAAMnB,KAAO+S,EAAS/S,MAAQ,EACnClM,KAAKqN,MAAMlB,KAAO8S,EAAS9S,MAAQ,EACnCnM,KAAKgS,YAELhS,KAAKwK,KAAK0B,KAAOlM,KAAKqN,MAAMnB,KAC5BlM,KAAKwK,KAAK2B,KAAOnM,KAAKqN,MAAMlB,KAC5BnM,KAAKwK,KAAK7B,EAAI3I,KAAKqN,MAAM1E,EACzB3I,KAAKwK,KAAK9B,EAAI1I,KAAKqN,MAAM3E,EACzB1I,KAAK0H,SAASkI,0BACd5P,KAAKuN,iBAIToR,EAAA/e,UAAAkW,aAAA,WACE,OAAQ9V,KAAK0H,SAASgG,SACnB1N,KAAKqN,MAAMuR,cAAgB5b,UAAYhD,KAAK0H,SAASC,SAASxD,UAAUE,QAAUrE,KAAKqN,MAAMuR,cAGlGD,EAAA/e,UAAA+c,aAAA,WACE,OAAQ3c,KAAK0H,SAASgG,SACnB1N,KAAKqN,MAAMqR,gBAAkB1b,UAAYhD,KAAK0H,SAASC,SAAS9C,UAAUR,QAAUrE,KAAKqN,MAAMqR,oCArIrGjK,EAAAA,UAASxN,KAAA,CAAC,CACTyN,SAAU,gBACVC,SAAA,s5DAEAC,cAAeC,EAAAA,kBAAkBpU,+9CAbhBqU,EAAAA,kBAOXvF,EAAiB2P,WAAA,CAAA,CAAAC,KAsBMC,EAAAA,cA7BwCrK,EAAAA,iBAA3BE,EAAAA,wCAgBzCC,EAAAA,SAiIHyJ,EAjJA,GCAAU,EAAA,WAcE,SAAAA,EAAY5V,EAAwB/B,EAAoC6B,GAAAvJ,KAAAuJ,SAAAA,EACtEvJ,KAAKyJ,GAAKA,EAAG+F,cACbxP,KAAK0H,SAAWA,EAChB1H,KAAK0H,SAASuB,aAAejJ,KAAKiJ,aAAaU,KAAK3J,MAoBxD,OAjBEqf,EAAAzf,UAAA2R,YAAA,kBACSvR,KAAKyJ,UACLzJ,KAAK0H,SAASuB,oBACdjJ,KAAK0H,UAGd2X,EAAAzf,UAAAqJ,aAAA,SAAagJ,GACNjS,KAAK0H,SAASsB,YAGbhJ,KAAK0H,SAASuI,SAAWgC,GAC3BjS,KAAK0H,SAASuI,QAAQpD,iBAAiB7M,KAAK0H,SAASsB,YAEvDhJ,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,UAAW,SAC3CzJ,KAAK0H,SAASwI,aAAazC,WAAWzN,KAAKyJ,GAAIzJ,KAAK0H,SAASsB,WAAYhJ,KAAKuJ,WAN9EvJ,KAAKuJ,SAASqE,SAAS5N,KAAKyJ,GAAI,UAAW,yBAxBhDgL,EAAAA,UAASxN,KAAA,CAAC,CACTyN,SAAU,mBACVC,SAAU,GAEVC,cAAeC,EAAAA,kBAAkBpU,yIARhBqU,EAAAA,kBAEXvF,EAAiB2P,WAAA,CAAA,CAAAC,KAYMC,EAAAA,cAdiBrK,EAAAA,aAqChDsK,EArCA,GCAAC,EAAA,WAOA,SAAAA,KAcA,2BAdCC,EAAAA,SAAQtY,KAAA,CAAC,CACRuY,aAAc,CACZjQ,EACAoP,EACAU,GAEFI,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAACpQ,EAAmBoP,GAC7BiB,UAAW,GACXC,UAAW,OAGbP,EArBA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n\n  if (!gridster.$options.disableScrollVertical) {\n    if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n      cancelN();\n      if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n        return;\n      }\n      intervalS = startVertical(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n      cancelS();\n      if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n        return;\n      }\n      intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientY !== e.clientY) {\n      cancelVertical();\n    }\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n\n  if (!gridster.$options.disableScrollHorizontal) {\n    if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n      cancelW();\n      if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n        return;\n      }\n      intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n      cancelE();\n      if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n        return;\n      }\n      intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n    } else if (lastMouse.clientX !== e.clientX) {\n      cancelHorizontal();\n    }\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  disableScrollHorizontal?: boolean;\n  disableScrollVertical?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {CompactType, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableScrollHorizontal: false, // disable horizontal scrolling\n  disableScrollVertical: false, // disable vertical scrolling\n  disableAutoPositionOnConflict: false  // disable auto-position of items on conflict state\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.$options.margin;\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.$options.margin;\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (this.gridster.curWidth / 2 * item.rows) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): Object {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + d + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + d) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): Object {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + x + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(el: ElementRef, public renderer: Renderer2, public cdRef: ChangeDetectorRef, public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  static checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    return item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options && this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options && this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width = el.clientWidth;\n    let height = el.clientHeight;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows, columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1, widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = Math.max(this.columns, Math.floor(this.curWidth / this.curColWidth)) || 0;\n    this.gridRows.length = Math.max(this.rows, Math.floor(this.curHeight / this.curRowHeight)) || 0;\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0, colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    const gridsterItemCollision: any = this.gridster.checkCollision(pushedBy.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n      }\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el.$item.x === itemCollision.$item.x && el.$item.y === itemCollision.$item.y;\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: Function;\n  mouseup: Function;\n  mouseleave: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  mousedown: Function;\n  touchstart: Function;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: Function;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: Function;\n  mouseup: Function;\n  mouseleave: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleNW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleNE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleSW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleSE;\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","import {Component, ElementRef, Host, Input, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2, private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n}\n","import {Component, ElementRef, Host, OnDestroy, Renderer2, ViewEncapsulation} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: []\n})\nexport class GridsterModule {\n}\n"]}